[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change",
    "section": "",
    "text": "This repository contains all code for the paper Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change\nThe paper have been submitted to Global Change Biology."
  },
  {
    "objectID": "index.html#analysis",
    "href": "index.html#analysis",
    "title": "Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change",
    "section": "Analysis",
    "text": "Analysis\n\nCompare models\nSelected model\nR-pkgs used"
  },
  {
    "objectID": "index.html#figures",
    "href": "index.html#figures",
    "title": "Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change",
    "section": "Figures",
    "text": "Figures\n\nFigure 1\nFigure 2\nFigure 3\nFigure 4"
  },
  {
    "objectID": "index.html#supplementary",
    "href": "index.html#supplementary",
    "title": "Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change",
    "section": "Supplementary",
    "text": "Supplementary\n\nFigure S1\nFigure S2\nFigure S3\nFigure S4\nFigure S5\nFigure S6\nFigure S7\nFigure S8"
  },
  {
    "objectID": "index.html#spatial-distribution-of-the-study-sites",
    "href": "index.html#spatial-distribution-of-the-study-sites",
    "title": "Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change",
    "section": "Spatial distribution of the study sites",
    "text": "Spatial distribution of the study sites\n\nMap"
  },
  {
    "objectID": "index.html#funding",
    "href": "index.html#funding",
    "title": "Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change",
    "section": "Funding",
    "text": "Funding\nThis study is a contribution to projects:\n\nPID2019-110273RB-I00\nPID2022-142746NB-I00 funded by MCIN/AEI /10.13039/501100011033,\nTED2021-131947B-100 also funded by the EU NextGenerationEU/PRTR.\nLIFE-ADAPTAMED (LIFE14 CCA/ES/000612).\nAntonio J. Pérez-Luque received funding from the Spanish Ministry of Science and Innovation through the Juan de la Cierva postdoctoral fellowship program. Grant JDC2022-050056-I funded by MCIN/AEI/ 10.13039/501100011033 and by “European Union NextGenerationEU/PRTR"
  },
  {
    "objectID": "analysis/figure_evi_abi_npp_avg.html",
    "href": "analysis/figure_evi_abi_npp_avg.html",
    "title": "Comparison of EVI, NPP, ABI and ABI:NPP ratio across species and elevation",
    "section": "",
    "text": "This figure corresponds to figure S4 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\nFigure\n\n\nCode\nlibrary(tidyverse)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(kableExtra)\nsource(\"../scripts/aux.R\")\n\nabi &lt;- read_csv(\"../data/abi.csv\") |&gt; \n  mutate(se = NA, sd = NA, variable = \"abi\") |&gt; \n  rename(mean = abi)\n\nnpp &lt;- read_csv(\"../data/npp_modis.csv\") |&gt; \n  rename(mean = npp) |&gt; \n  mutate(se = NA, sd = NA, variable = \"npp\") |&gt; \n  dplyr::select(year, sp_code, elev_code, sp_elev, mean, sd, se, variable) \n\nevi_landsat &lt;- read_csv(\"../data/iv_landsat.csv\") |&gt; \n  filter(iv == \"evi\") |&gt; \n  dplyr::select(year, sp_code, elev_code, mean, sd, se) |&gt; \n  mutate(variable = \"evi_landsat\")\n\nratio &lt;- read_csv(\"../data/ratio_abinpp.csv\") |&gt; \n  dplyr::select(year, sp_code, elev_code, sp_elev, mean = ratio) |&gt; \n  mutate(se = NA, sd = NA, variable = \"ratio\") \n\n\ndf &lt;- bind_rows(\n  abi, evi_landsat, npp, ratio) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\",\"low\", \"medium\", \"high\")) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code)) |&gt; \n  rename(mean_y = mean, y_variable = variable)\n\n\n## Summary statistics \n# Function to generate comparisons and perform letter-based grouping\ngenerate_comparisons &lt;- function(model, sp_code = NULL, elev_code = NULL, alpha = 0.001) {\n  emm &lt;- emmeans(model, pairwise ~ sp_code * elev_code, adjust = \"bonferroni\", alpha = alpha,\n                 at = list(sp_code = sp_code, elev_code = elev_code))\n  \n  \n  cld_df &lt;- multcomp::cld(emm, Letters = letters, level = 1 - alpha)\n  p_values &lt;- summary(emm, infer = TRUE)$contrasts$'p.value'\n  result_df &lt;- cld_df |&gt; \n    mutate(p_value = p_values[match(.group, cld_df$.group)])\n  return(result_df)\n}\n\n\ndf_avg &lt;- df |&gt; \n  group_by(y_variable, sp_code, elev_code, sp_elev) |&gt; \n  summarise(mean = mean(mean_y), \n            sd = sd(mean_y), \n            se = sd/sqrt(length(mean_y))) |&gt; ungroup()\n\nvariable &lt;- \"evi_landsat\"\n\nx &lt;- df |&gt; filter(y_variable == variable)  \n\nlm_evi &lt;- lm(mean_y ~ sp_code*elev_code, data = x) \n\nmeans_letters_lm_evi &lt;- bind_rows(\n  generate_comparisons(lm_evi, sp_code = \"halepensis\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_evi, sp_code = \"pinaster\", elev_code = c(\"low\", \"low-Dec\", \"medium\", \"high\")),\n  generate_comparisons(lm_evi, sp_code = \"nigra\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_evi, sp_code = \"sylvestris\", elev_code = c(\"low\", \"medium\", \"high\"))\n) |&gt; \n  mutate(y_variable = variable)\n\n\n\nvariable &lt;- \"evi_landsat\"\n\nx &lt;- df |&gt; filter(y_variable == variable)  \n\nlm_evi &lt;- lm(mean_y ~ sp_code*elev_code, data = x) \n\nmeans_letters_lm_evi &lt;- bind_rows(\n  generate_comparisons(lm_evi, sp_code = \"halepensis\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_evi, sp_code = \"pinaster\", elev_code = c(\"low\", \"low-Dec\", \"medium\", \"high\")),\n  generate_comparisons(lm_evi, sp_code = \"nigra\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_evi, sp_code = \"sylvestris\", elev_code = c(\"low\", \"medium\", \"high\"))\n) |&gt; \n  mutate(y_variable = variable)\n\n\nvariable &lt;- \"abi\"\n\nx &lt;- df |&gt; filter(y_variable == variable)  \n\nlm_abi &lt;- lm(mean_y ~ sp_code*elev_code, data = x) \n\nmeans_letters_lm_abi &lt;- bind_rows(\n  generate_comparisons(lm_abi, sp_code = \"halepensis\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_abi, sp_code = \"pinaster\", elev_code = c(\"low\", \"low-Dec\", \"medium\", \"high\")),\n  generate_comparisons(lm_abi, sp_code = \"nigra\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_abi, sp_code = \"sylvestris\", elev_code = c(\"low\", \"medium\", \"high\"))\n) |&gt; \n  mutate(y_variable = variable)\n\n\nvariable &lt;- \"npp\"\n\nx &lt;- df |&gt; filter(y_variable == variable)  \n\nlm_npp &lt;- lm(mean_y ~ sp_code*elev_code, data = x) \n\nmeans_letters_lm_npp &lt;- bind_rows(\n  generate_comparisons(lm_npp, sp_code = \"halepensis\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_npp, sp_code = \"pinaster\", elev_code = c(\"low\", \"low-Dec\", \"medium\", \"high\")),\n  generate_comparisons(lm_npp, sp_code = \"nigra\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_npp, sp_code = \"sylvestris\", elev_code = c(\"low\", \"medium\", \"high\"))\n) |&gt; \n  mutate(y_variable = variable)\n\n\nvariable &lt;- \"ratio\"\n\nx &lt;- df |&gt; filter(y_variable == variable)  \n\nlm_ratio &lt;- lm(mean_y ~ sp_code*elev_code, data = x) \n\nmeans_letters_lm_ratio &lt;- bind_rows(\n  generate_comparisons(lm_ratio, sp_code = \"halepensis\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_ratio, sp_code = \"pinaster\", elev_code = c(\"low\", \"low-Dec\", \"medium\", \"high\")),\n  generate_comparisons(lm_ratio, sp_code = \"nigra\", elev_code = c(\"low\", \"medium\", \"high\")),\n  generate_comparisons(lm_ratio, sp_code = \"sylvestris\", elev_code = c(\"low\", \"medium\", \"high\"))\n) |&gt; \n  mutate(y_variable = variable)\n\n\ndf_letters &lt;- bind_rows(means_letters_lm_abi, means_letters_lm_evi, means_letters_lm_npp, means_letters_lm_ratio) |&gt; ungroup()\n\nout &lt;- df_avg |&gt; inner_join(df_letters) |&gt; \n  mutate(pvalue = ifelse(p_value &lt; 0.0001, \"&lt;0.0001\", round(p_value, 3))) \n\n\n## Figure \ndf_plot &lt;- df |&gt; \n  mutate(sp_code = fct_relevel(sp_code, \"halepensis\",\"pinaster\", \"nigra\", \"sylvestris\")) |&gt; \n  mutate(variable2 = case_when(\n    y_variable == \"abi\" ~ \"ABI~(g~C~m^2~year^{-1})\", \n    y_variable == \"npp\" ~ \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n    y_variable == \"evi_landsat\" ~ \"EVI[Landsat]\",\n    y_variable == \"ratio\" ~ \"ABI:NPP~ratio\"\n  )) |&gt; \n  mutate(Species = paste0(\"P. \", sp_code)) |&gt; \n  ungroup() \n\nout_plot &lt;- out |&gt; \n  mutate(sp_code = fct_relevel(sp_code, \"halepensis\",\"pinaster\", \"nigra\", \"sylvestris\")) |&gt; \n  mutate(variable2 = case_when(\n    y_variable == \"abi\" ~ \"ABI~(g~C~m^2~year^{-1})\", \n    y_variable == \"npp\" ~ \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n    y_variable == \"evi_landsat\" ~ \"EVI[Landsat]\",\n    y_variable == \"ratio\" ~ \"ABI:NPP~ratio\"\n  )) |&gt; \n  ungroup() \n\n\ny_scales &lt;- list(\n  scale_y_continuous(limits = c(0, 0.5)),\n  scale_y_continuous(limits = c(0,1000)),\n  scale_y_continuous(limits = c(0, 600)), \n  scale_y_continuous(limits = c(0,.7))\n)\n\nletras_indicativo_plot &lt;- data.frame(\n  variable2 = c(\"EVI[Landsat]\", \n                \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n                \"ABI~(g~C~m^2~year^{-1})\",\n                \"ABI:NPP~ratio\"), \n  label = c(\"a\", \"b\", \"c\", \"d\"),\n  x = c(-Inf, -Inf, -Inf, -Inf),  \n  y = c(Inf, Inf, Inf, Inf)  # Inf to put at upper \n)\n\ncustom_position = position_dodge(width = 0.3)\n\n\nout_plot2 &lt;- out_plot |&gt; \n  inner_join(letras_indicativo_plot, by=\"variable2\") |&gt; \n  mutate(Species = paste0(\"P. \", sp_code)) |&gt; \n  mutate(Species = fct_relevel(Species, \"P. halepensis\",\"P. pinaster\", \"P. nigra\", \"P. sylvestris\")) \n\n\ncolours_elev &lt;- c(\"low-Dec\" = \"#8c510a\",\n                  \"low\" =\"#fc8d59\",\n                  \"medium\" = \"#2166ac\",\n                  \"high\" = \"#72A55A\")\n\nplot_avg_eviabinpp &lt;- ggplot(data = out_plot2, \n                             aes(y = mean, x = Species, group = elev_code, colour = elev_code)) + \n  geom_jitter(data = df_plot,\n              aes(y = mean_y, x = Species, \n                  group = elev_code, colour = elev_code), \n              alpha = 0.3, size = .75, stroke = 0.5, \n              position = custom_position, show.legend = FALSE) + \n  geom_line(position = custom_position, size = .6) +\n  geom_errorbar(aes(ymin=mean-1.96*se, ymax=mean+1.96*se), \n                colour = \"black\", width=.2, lwd = .7, position = custom_position) +  \n  geom_point(size = 2.2, position = custom_position, \n             aes(fill = elev_code, group = elev_code),\n             shape = 21, colour = \"black\", stroke = 0.5, show.legend = FALSE) +\n  facet_wrap(~factor(variable2, c(\"EVI[Landsat]\", \n                                  \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n                                  \"ABI~(g~C~m^2~year^{-1})\",\n                                  \"ABI:NPP~ratio\")),\n             scales = \"free_y\", \n             labeller = label_parsed, \n             strip.position = \"left\",\n             ncol = 1) +\n  theme_bw() + \n  theme(\n    panel.grid = element_blank(),\n    strip.background = element_blank(),\n    strip.placement = \"outside\",\n    legend.position = c(0.85, 0.84),\n    legend.background = element_blank(),\n    axis.text.x = element_text(face = \"italic\"),\n    strip.text = element_text(face = \"bold\", size = 9)\n  ) + \n  scale_colour_manual(values = colours_elev, name = \"\", guide = guide_legend(override.aes = list(linewidth = 2))) +\n  scale_fill_manual(values = colours_elev, name = \"\") + \n  xlab(\"\") + \n  ylab(\"\") + \n  ggh4x::facetted_pos_scales(y = y_scales) +\n  geom_text(aes(label = label, x = x, y = y), \n            vjust = 1.2, hjust = -.5, size = 6, \n            fontface = \"bold\", inherit.aes = FALSE)\n# custom scales\n\nplot_avg_eviabinpp    \n\n\n\n\n\nComparisons of the annual EVI (Enhanced Vegetation Index) (1986-2022), annual NPP (Net Primary Productivity (2001-2022), ABI (Aboveground Biomass Increment) (1952-2022) and ABI:NPP ratio (2001-2022) among species and elevation. Each small dot represents one mean annual value. Big dots represent average values. Error bars indicate 95 % confidence interval.\n\n\n\n\n\n\nCode\nout |&gt; \n  ungroup() |&gt; \n  dplyr::select(-sp_elev) |&gt; \n  dplyr::select(-p_value) |&gt; \n  arrange(y_variable, sp_code, elev_code) |&gt; \n  kbl(digits = c(0,0,0,3,3,3, 3,3,0,3,3,0,5), \n      caption = \"Posthoc differences within species for average ABI, EVI, NPP\") |&gt; \n  kable_paper(\"hover\", full_width = F)\n\n\n\n\nPosthoc differences within species for average ABI, EVI, NPP\n\n\n\n\ny_variable\n\n\nsp_code\n\n\nelev_code\n\n\nmean\n\n\nsd\n\n\nse\n\n\nemmean\n\n\nSE\n\n\ndf\n\n\nlower.CL\n\n\nupper.CL\n\n\n.group\n\n\npvalue\n\n\n\n\n\n\nabi\n\n\nhalepensis\n\n\nlow\n\n\n37.530\n\n\n36.400\n\n\n5.551\n\n\n37.530\n\n\n12.459\n\n\n694\n\n\n-3.641\n\n\n78.700\n\n\na\n\n\n0.088\n\n\n\n\nabi\n\n\nhalepensis\n\n\nmedium\n\n\n76.225\n\n\n64.156\n\n\n9.900\n\n\n76.225\n\n\n12.606\n\n\n694\n\n\n34.568\n\n\n117.883\n\n\na\n\n\n0.088\n\n\n\n\nabi\n\n\nhalepensis\n\n\nhigh\n\n\n55.754\n\n\n33.091\n\n\n4.136\n\n\n55.754\n\n\n10.212\n\n\n694\n\n\n22.008\n\n\n89.501\n\n\na\n\n\n0.088\n\n\n\n\nabi\n\n\nnigra\n\n\nlow\n\n\n78.402\n\n\n40.264\n\n\n5.287\n\n\n78.402\n\n\n10.727\n\n\n694\n\n\n42.953\n\n\n113.852\n\n\na\n\n\n1\n\n\n\n\nabi\n\n\nnigra\n\n\nmedium\n\n\n68.667\n\n\n44.275\n\n\n5.764\n\n\n68.667\n\n\n10.636\n\n\n694\n\n\n33.519\n\n\n103.814\n\n\na\n\n\n1\n\n\n\n\nabi\n\n\nnigra\n\n\nhigh\n\n\n142.916\n\n\n96.256\n\n\n13.348\n\n\n142.916\n\n\n11.329\n\n\n694\n\n\n105.478\n\n\n180.355\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nabi\n\n\npinaster\n\n\nlow-Dec\n\n\n48.876\n\n\n27.511\n\n\n3.494\n\n\n48.876\n\n\n10.375\n\n\n694\n\n\n14.590\n\n\n83.163\n\n\na\n\n\n0.281\n\n\n\n\nabi\n\n\npinaster\n\n\nlow\n\n\n77.250\n\n\n45.168\n\n\n5.399\n\n\n77.250\n\n\n9.765\n\n\n694\n\n\n44.982\n\n\n109.518\n\n\na\n\n\n0.281\n\n\n\n\nabi\n\n\npinaster\n\n\nmedium\n\n\n167.705\n\n\n115.563\n\n\n15.045\n\n\n167.705\n\n\n10.636\n\n\n694\n\n\n132.557\n\n\n202.852\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nabi\n\n\npinaster\n\n\nhigh\n\n\n257.671\n\n\n158.973\n\n\n25.789\n\n\n257.671\n\n\n13.253\n\n\n694\n\n\n213.876\n\n\n301.467\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nabi\n\n\nsylvestris\n\n\nlow\n\n\n87.516\n\n\n51.346\n\n\n6.861\n\n\n87.516\n\n\n10.917\n\n\n694\n\n\n51.440\n\n\n123.593\n\n\na\n\n\n&lt;0.0001\n\n\n\n\nabi\n\n\nsylvestris\n\n\nmedium\n\n\n179.616\n\n\n102.904\n\n\n14.003\n\n\n179.616\n\n\n11.117\n\n\n694\n\n\n142.877\n\n\n216.355\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nabi\n\n\nsylvestris\n\n\nhigh\n\n\n226.002\n\n\n146.879\n\n\n20.772\n\n\n226.002\n\n\n11.554\n\n\n694\n\n\n187.822\n\n\n264.182\n\n\nc\n\n\n0.012\n\n\n\n\nevi_landsat\n\n\nhalepensis\n\n\nlow\n\n\n0.186\n\n\n0.029\n\n\n0.005\n\n\n0.186\n\n\n0.005\n\n\n467\n\n\n0.168\n\n\n0.203\n\n\na\n\n\n0.04\n\n\n\n\nevi_landsat\n\n\nhalepensis\n\n\nmedium\n\n\n0.204\n\n\n0.028\n\n\n0.005\n\n\n0.204\n\n\n0.005\n\n\n467\n\n\n0.187\n\n\n0.222\n\n\nb\n\n\n0.318\n\n\n\n\nevi_landsat\n\n\nhalepensis\n\n\nhigh\n\n\n0.192\n\n\n0.025\n\n\n0.004\n\n\n0.192\n\n\n0.005\n\n\n467\n\n\n0.175\n\n\n0.210\n\n\nab\n\n\n1\n\n\n\n\nevi_landsat\n\n\nnigra\n\n\nlow\n\n\n0.231\n\n\n0.024\n\n\n0.004\n\n\n0.231\n\n\n0.005\n\n\n467\n\n\n0.214\n\n\n0.249\n\n\nab\n\n\n0.074\n\n\n\n\nevi_landsat\n\n\nnigra\n\n\nmedium\n\n\n0.241\n\n\n0.022\n\n\n0.004\n\n\n0.241\n\n\n0.005\n\n\n467\n\n\n0.223\n\n\n0.258\n\n\nb\n\n\n0.001\n\n\n\n\nevi_landsat\n\n\nnigra\n\n\nhigh\n\n\n0.214\n\n\n0.033\n\n\n0.005\n\n\n0.214\n\n\n0.005\n\n\n467\n\n\n0.197\n\n\n0.232\n\n\na\n\n\n0.618\n\n\n\n\nevi_landsat\n\n\npinaster\n\n\nlow-Dec\n\n\n0.215\n\n\n0.024\n\n\n0.004\n\n\n0.215\n\n\n0.005\n\n\n467\n\n\n0.198\n\n\n0.233\n\n\na\n\n\n0.018\n\n\n\n\nevi_landsat\n\n\npinaster\n\n\nlow\n\n\n0.238\n\n\n0.033\n\n\n0.005\n\n\n0.238\n\n\n0.005\n\n\n467\n\n\n0.220\n\n\n0.255\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nevi_landsat\n\n\npinaster\n\n\nmedium\n\n\n0.353\n\n\n0.034\n\n\n0.006\n\n\n0.353\n\n\n0.005\n\n\n467\n\n\n0.335\n\n\n0.370\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nevi_landsat\n\n\npinaster\n\n\nhigh\n\n\n0.344\n\n\n0.063\n\n\n0.010\n\n\n0.344\n\n\n0.005\n\n\n467\n\n\n0.327\n\n\n0.362\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nevi_landsat\n\n\nsylvestris\n\n\nlow\n\n\n0.358\n\n\n0.026\n\n\n0.004\n\n\n0.358\n\n\n0.005\n\n\n467\n\n\n0.341\n\n\n0.376\n\n\na\n\n\n&lt;0.0001\n\n\n\n\nevi_landsat\n\n\nsylvestris\n\n\nmedium\n\n\n0.416\n\n\n0.030\n\n\n0.005\n\n\n0.416\n\n\n0.005\n\n\n467\n\n\n0.399\n\n\n0.434\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nevi_landsat\n\n\nsylvestris\n\n\nhigh\n\n\n0.424\n\n\n0.027\n\n\n0.005\n\n\n0.424\n\n\n0.005\n\n\n467\n\n\n0.406\n\n\n0.441\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\nhalepensis\n\n\nlow\n\n\n291.700\n\n\n56.247\n\n\n11.992\n\n\n291.700\n\n\n13.978\n\n\n273\n\n\n245.203\n\n\n338.197\n\n\na\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\nhalepensis\n\n\nmedium\n\n\n637.305\n\n\n56.993\n\n\n12.151\n\n\n637.305\n\n\n13.978\n\n\n273\n\n\n590.808\n\n\n683.801\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\nhalepensis\n\n\nhigh\n\n\n509.632\n\n\n59.907\n\n\n12.772\n\n\n509.632\n\n\n13.978\n\n\n273\n\n\n463.135\n\n\n556.128\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\nnigra\n\n\nlow\n\n\n690.250\n\n\n68.047\n\n\n14.508\n\n\n690.250\n\n\n13.978\n\n\n273\n\n\n643.753\n\n\n736.747\n\n\na\n\n\n0.452\n\n\n\n\nnpp\n\n\nnigra\n\n\nmedium\n\n\n718.736\n\n\n70.079\n\n\n14.941\n\n\n718.736\n\n\n13.978\n\n\n273\n\n\n672.240\n\n\n765.233\n\n\na\n\n\n0.452\n\n\n\n\nnpp\n\n\nnigra\n\n\nhigh\n\n\n720.136\n\n\n71.862\n\n\n15.321\n\n\n720.136\n\n\n13.978\n\n\n273\n\n\n673.640\n\n\n766.633\n\n\na\n\n\n0.452\n\n\n\n\nnpp\n\n\npinaster\n\n\nlow-Dec\n\n\n580.368\n\n\n60.299\n\n\n12.856\n\n\n580.368\n\n\n13.978\n\n\n273\n\n\n533.872\n\n\n626.865\n\n\na\n\n\n0.003\n\n\n\n\nnpp\n\n\npinaster\n\n\nlow\n\n\n650.586\n\n\n68.523\n\n\n14.609\n\n\n650.586\n\n\n13.978\n\n\n273\n\n\n604.090\n\n\n697.083\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\npinaster\n\n\nmedium\n\n\n759.386\n\n\n77.945\n\n\n16.618\n\n\n759.386\n\n\n13.978\n\n\n273\n\n\n712.890\n\n\n805.883\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\npinaster\n\n\nhigh\n\n\n741.209\n\n\n68.329\n\n\n14.568\n\n\n741.209\n\n\n13.978\n\n\n273\n\n\n694.713\n\n\n787.706\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\nsylvestris\n\n\nlow\n\n\n913.482\n\n\n68.459\n\n\n14.596\n\n\n913.482\n\n\n13.978\n\n\n273\n\n\n866.985\n\n\n959.978\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\nsylvestris\n\n\nmedium\n\n\n845.050\n\n\n51.023\n\n\n10.878\n\n\n845.050\n\n\n13.978\n\n\n273\n\n\n798.553\n\n\n891.547\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nnpp\n\n\nsylvestris\n\n\nhigh\n\n\n636.918\n\n\n69.313\n\n\n14.778\n\n\n636.918\n\n\n13.978\n\n\n273\n\n\n590.422\n\n\n683.415\n\n\na\n\n\n0.002\n\n\n\n\nratio\n\n\nhalepensis\n\n\nlow\n\n\n0.136\n\n\n0.094\n\n\n0.020\n\n\n0.136\n\n\n0.017\n\n\n240\n\n\n0.080\n\n\n0.192\n\n\na\n\n\n1\n\n\n\n\nratio\n\n\nhalepensis\n\n\nmedium\n\n\n0.112\n\n\n0.067\n\n\n0.016\n\n\n0.112\n\n\n0.019\n\n\n240\n\n\n0.050\n\n\n0.174\n\n\na\n\n\n1\n\n\n\n\nratio\n\n\nhalepensis\n\n\nhigh\n\n\n0.089\n\n\n0.046\n\n\n0.010\n\n\n0.089\n\n\n0.017\n\n\n240\n\n\n0.033\n\n\n0.145\n\n\na\n\n\n1\n\n\n\n\nratio\n\n\nnigra\n\n\nlow\n\n\n0.113\n\n\n0.057\n\n\n0.012\n\n\n0.113\n\n\n0.017\n\n\n240\n\n\n0.056\n\n\n0.170\n\n\na\n\n\n0.12\n\n\n\n\nratio\n\n\nnigra\n\n\nmedium\n\n\n0.060\n\n\n0.038\n\n\n0.009\n\n\n0.060\n\n\n0.019\n\n\n240\n\n\n-0.003\n\n\n0.124\n\n\na\n\n\n0.12\n\n\n\n\nratio\n\n\nnigra\n\n\nhigh\n\n\n0.207\n\n\n0.085\n\n\n0.019\n\n\n0.207\n\n\n0.018\n\n\n240\n\n\n0.148\n\n\n0.265\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nratio\n\n\npinaster\n\n\nlow-Dec\n\n\n0.086\n\n\n0.038\n\n\n0.008\n\n\n0.086\n\n\n0.017\n\n\n240\n\n\n0.029\n\n\n0.144\n\n\na\n\n\n1\n\n\n\n\nratio\n\n\npinaster\n\n\nlow\n\n\n0.100\n\n\n0.049\n\n\n0.011\n\n\n0.100\n\n\n0.017\n\n\n240\n\n\n0.043\n\n\n0.157\n\n\nab\n\n\n0.079\n\n\n\n\nratio\n\n\npinaster\n\n\nmedium\n\n\n0.164\n\n\n0.090\n\n\n0.022\n\n\n0.164\n\n\n0.019\n\n\n240\n\n\n0.100\n\n\n0.227\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nratio\n\n\npinaster\n\n\nhigh\n\n\n0.296\n\n\n0.155\n\n\n0.035\n\n\n0.296\n\n\n0.018\n\n\n240\n\n\n0.238\n\n\n0.355\n\n\nc\n\n\n0.017\n\n\n\n\nratio\n\n\nsylvestris\n\n\nlow\n\n\n0.113\n\n\n0.029\n\n\n0.007\n\n\n0.113\n\n\n0.019\n\n\n240\n\n\n0.051\n\n\n0.175\n\n\na\n\n\n&lt;0.0001\n\n\n\n\nratio\n\n\nsylvestris\n\n\nmedium\n\n\n0.242\n\n\n0.101\n\n\n0.024\n\n\n0.242\n\n\n0.019\n\n\n240\n\n\n0.180\n\n\n0.304\n\n\nb\n\n\n&lt;0.0001\n\n\n\n\nratio\n\n\nsylvestris\n\n\nhigh\n\n\n0.493\n\n\n0.076\n\n\n0.018\n\n\n0.493\n\n\n0.019\n\n\n240\n\n\n0.431\n\n\n0.554\n\n\nc\n\n\n&lt;0.0001\n\n\n\n\nComparison table"
  },
  {
    "objectID": "analysis/model_selected.html",
    "href": "analysis/model_selected.html",
    "title": "Selected Model",
    "section": "",
    "text": "\\[(ABI:NPP)_i=MR \\times g(T_{med}) \\times g(PREC) + \\epsilon_i\\] where:\n\n\\((ABI:NPP)_i\\) is the value of the ABI:NPP ratio for each site and year\n\\(MR\\) is a parameter representing the maximum ABI:NPP ratio (dimensionless)\n\\(\\epsilon_i\\) is the random error for each observation \\(i\\)\n\\(g(T_{med})\\) is a function with values between 0 and 1, which depends on temperature.\n\\(g(PREC)\\) is a function with values between 0 and 1, which depends on precipitation.\n\nwith the Logistic modified function for temperature and Log-normal for precipitation \\[g(T_{med})=(1-T_a) \\times \\left[\\frac{1}{1+\\exp (-k \\times (TMED - T_{OPT})) }\\right] + T_a\\]\n\\[g(PREC)=\\exp \\left[ -\\frac{1}{2} \\left(\\frac{\\log{(\\frac{PREC}{P_{OPT}}}) }{P_b}\\right)^2 \\right]\\]\n\n\\(TMED\\) is the value of the annual mean temperature\n\\(T_{OPT}\\) = optimum value of the annual mean temperature at which occur the maximum ratio (Lognormal and Gaussian models) or that represent the half-saturation point (logistic part in the Logistic modified model)\n\\(k\\) = rate that determines the steepness of the logistic curve\n\\(T_a\\) = scaling factor that adjust the influence of the logistic function.\n\\(PREC\\) is the value of the annual precipitation\n\\(P_{OPT}\\) = value of the precipitation at which the ABI:NPP ratio is expected to be optimum\n\\(P_b\\) = scale parameter that adjust for the variability in the response of the ABI:NPP ratio to changes in precipitation\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(likelihood)\nlibrary(kableExtra)\n# install.packages(\"pak\")\n# pak::pak(\"ajpelu/likelihoodTools\")\nlibrary(likelihoodTools)\nlibrary(MASS)\nsource(\"../scripts/aux.R\")\n\nannual_pet &lt;- read_csv(\"../data/spei_climate.csv\") |&gt; \n  dplyr::select(sp_elev, year, monthly_pet, monthly_tmed, monthly_prec) |&gt; \n  group_by(sp_elev, year) |&gt;\n  summarise(pet = sum(monthly_pet), \n            prec = sum(monthly_prec),\n            tmed = mean(monthly_tmed, na.rm = TRUE)) |&gt; \n  rowwise() |&gt; \n  mutate(water_balance = prec - pet)\n\nratio &lt;- read_csv(\"../data/ratio_abinpp.csv\") |&gt; \n  dplyr::select(year, sp_code, elev_code, sp_elev, ratio_abi_npp = ratio) \n\ndf &lt;- ratio |&gt; \n  inner_join(annual_pet) |&gt; \n  pivot_longer(pet:water_balance, values_to = \"mean_climate\", \n               names_to = \"climate_variable\")\n\nd &lt;- df |&gt; filter(climate_variable %in% c(\"tmed\", \"prec\")) |&gt; \n  pivot_wider(values_from = mean_climate, names_from = climate_variable) |&gt; \n  dplyr::rename(rat = ratio_abi_npp) |&gt; \n  mutate(species = paste0(\"P. \", sp_code))\n\n\n\n\nCode\n### Temperature (Logistic mod.); Precipitation (Log-normal) (**mcombrat7**)\nmcombrat7 &lt;- function(MR, Ta, k, Topt, Popt, Pb){\n  # log-mod temperature\n  # log-normal prec \n  tmed_effect &lt;- (1-Ta)*(1 / (1 + exp(- k *( d$tmed - Topt)))) + Ta\n  prec_effect &lt;- exp(-0.5*(log(d$prec/Popt)/Pb)^2)\n  MR * tmed_effect * prec_effect\n}\n\nvar=list(mean = \"predicted\", x = \"rat\", tmed = \"tmed\", prec = \"prec\", log = TRUE)\n\nset.seed(123456)\n\nresult_mcombrat7 &lt;- anneal(\n  model = mcombrat7, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Ta = 0.5, k = -1, Topt = 10, Popt = 500, Pb = 2), \n  par_lo = list(MR = 0, Ta = 0, k = -2, Topt = 0, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Ta = 1, k = 2, Topt = 20, Popt = 1000, Pb = 5),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\n\nresult_mcombrat7 |&gt; likelihood::write_results(\"../output/models/multiplicative_tmed_logisticmod_prec_lognormal.txt\")\n\n\n\nValidation Plot\n\nThis figure corresponds to figure S6 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\n\nCode\nplot_validation\n\n\n\n\n\nObserved vs. Predicted ABI:NPP (a) and Residuals vs. Predicted ABI:NPP plots (b) of the selected model. Histogram of the residuals of the selected model (c).\n\n\n\n\nCode\nggsave(\n   plot_validation,\n   file = \"../output/figure_model_validation.jpg\",\n   dpi = 600,\n   width = 13, height = 5.5\n )\n\n\n\n\nValues and support parameters\n\nThis table corresponds to table S5 in the manuscript.\n\n\n\nCode\nsupport_limits_table &lt;- function(x) {\n  data &lt;- x\n  out &lt;- inner_join(\n    (data$lower_limits |&gt; bind_rows() |&gt; pivot_longer(everything(), names_to = \"parameter\", values_to = \"lower_si\")),\n    (data$upper_limits |&gt; bind_rows() |&gt; pivot_longer(everything(), names_to = \"parameter\", values_to = \"upper_si\"))\n  )\n  return(out)\n}\n\nlimits &lt;- support_limits(mcombrat7, result_mcombrat7$best_pars,\n  var = var,\n  source_data = d, pdf = dnorm,\n  par_lo = list(MR = 0, Tb = -1, k = -1.7, Topt = 6, Popt = 0, Pb = 0),\n  par_hi = list(MR = 1.5, Tb = 0.9, k = 1, Topt = 20, Popt = 3100, Pb = 1),\n  slimit = 2\n)\n\n\n\ntable_support_limits &lt;- inner_join(\n  result_mcombrat7$best_pars |&gt;\n    bind_rows() |&gt;\n    pivot_longer(everything(), names_to = \"parameter\", values_to = \"best_pars\"),\n  support_limits_table(limits)\n)\n\ntable_support_limits |&gt; write_csv(\"../output/models/table_params_support_limit.csv\")\n\n\n\ntable_support_limits |&gt; \n  kbl(digits = c(0,3,3,3)) |&gt; \n  kable_styling()\n\n\n\n\n\n\nparameter\n\n\nbest_pars\n\n\nlower_si\n\n\nupper_si\n\n\n\n\n\n\nMR\n\n\n0.596\n\n\n0.209\n\n\n0.970\n\n\n\n\nTa\n\n\n0.286\n\n\n-0.057\n\n\n0.614\n\n\n\n\nk\n\n\n-1.561\n\n\n-1.700\n\n\n0.015\n\n\n\n\nTopt\n\n\n9.889\n\n\n6.000\n\n\n11.404\n\n\n\n\nPopt\n\n\n851.266\n\n\n85.127\n\n\n3035.589\n\n\n\n\nPb\n\n\n1.176\n\n\n0.400\n\n\n1.000\n\n\n\n\nValues and support intervals of the parameters for the selected model. MR = Maximum ABI:NPP ratio. TMED, TOPT, k and Tsub&gt;a are parameters of the annual mean temperature function (logistic modified), where TMED = value of the annual mean temperature, TOPT = value of the annual mean temperature which represent the half-saturation point of the logistic part of the equation and k = rate that determines the steepness of the logistic curve. Ta is a scaling factor that adjust the influence of the logistic function (i.e. a baseline value or offset). PREC, POPT and Pb are parameters of the annual precipitation function (lognormal), where PREC = value of the precipitation, POPT = value of the precipitation at which the ABI:NPP ratio is expected to be optimum, and Pb = scale parameter that adjust for the variability in the response of the ABI:NPP ratio to changes in precipitation."
  },
  {
    "objectID": "analysis/figure_ts_climate.html",
    "href": "analysis/figure_ts_climate.html",
    "title": "Time series of climate variables",
    "section": "",
    "text": "This figure corresponds to figure S2 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\nFigure\n\n\nCode\nlibrary(tidyverse)\nsource(\"../scripts/aux.R\")\nlibrary(Kendall)\nlibrary(trend)\n\navg_yearly &lt;- read_csv(\"../data/climate_avg_yearly.csv\") |&gt; \n#  mutate(elev_code = fct_recode(elev_code, `low-Dec` = \"low2\")) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\",\"low\", \"medium\", \"high\"))\n\naux &lt;- avg_yearly |&gt; \n  dplyr::select(-annual_sd, -annual_se) |&gt; \n  pivot_wider(names_from = var, values_from = annual_value) \n\n\n# Tmed 1971, Prec 1970 \nmk_tmed &lt;- aux |&gt; \n  dplyr::select(-prec) |&gt; \n  na.omit() |&gt; \n  ungroup() |&gt; \n  group_by(sp_code, elev_code, sp_elev)|&gt; \n  summarise(across(c(tmed), ~MannKendall(.)$tau, .names =\"tau\"),\n            across(c(tmed), ~MannKendall(.)$sl, .names =\"pvalue_mk\"),\n            across(c(tmed), ~trend::sens.slope(.)$estimate, .names =\"senslope\"),\n            across(c(tmed), ~trend::sens.slope(.)$p.value, .names =\"pvalue_sen\")) |&gt; \n  mutate(ypos = \n           case_when(\n             elev_code == \"low\" ~ 14,\n             elev_code == \"low-Dec\" ~ 8,\n             elev_code == \"medium\" ~ 15,\n             elev_code == \"high\" ~ 16), \n         p_value_string = symnum(pvalue_mk, corr = FALSE,\n                                 cutpoints = c(0,  .001,.01,.05, 1),\n                                 symbols = c(\"***\",\"**\",\"*\",\"\")), \n         variable = \"tmed\") |&gt; \n  mutate(taulabel = paste(expression(tau), \"==\", paste0('\"', round(tau, 3), p_value_string, '\"'))) |&gt; \n  mutate(\n    Specie = paste0(\"P. \", sp_code)\n  ) |&gt; \n  mutate(taulabel = gsub(\"-\", \"\\U2212\", taulabel))\n\n\nmk_tmed &lt;- mk_tmed |&gt; \n  mutate(ypos = \n           case_when(\n             sp_code == \"halepensis\" & elev_code == \"low\" ~ 8,\n             sp_code == \"halepensis\" & elev_code == \"medium\" ~ 9,\n             sp_code == \"halepensis\" & elev_code == \"high\" ~ 10,\n             TRUE ~ ypos)) \n\nmk_prec &lt;- aux |&gt; \n  ungroup() |&gt; \n  filter(year &gt; 1969) |&gt; \n  group_by(sp_code, elev_code, sp_elev)|&gt; \n  summarise(across(c(prec), ~MannKendall(.)$tau, .names =\"tau\"),\n            across(c(prec), ~MannKendall(.)$sl, .names =\"pvalue_mk\"),\n            across(c(prec), ~trend::sens.slope(.)$estimate, .names =\"senslope\"),\n            across(c(prec), ~trend::sens.slope(.)$p.value, .names =\"pvalue_sen\")) |&gt; \n  mutate(ypos = \n           case_when(\n             elev_code == \"low\" ~ 1200,\n             elev_code == \"low-Dec\" ~ 1050,\n             elev_code == \"medium\" ~ 1350,\n             elev_code == \"high\" ~ 1500), \n         p_value_string = symnum(pvalue_mk, corr = FALSE,\n                                 cutpoints = c(0,  .001,.01,.05, 1),\n                                 symbols = c(\"***\",\"**\",\"*\",\"\")),\n         variable = \"prec\") |&gt; \n  mutate(taulabel = paste(expression(tau), \"==\", paste0('\"', round(tau, 3), p_value_string, '\"'))) |&gt; \n  mutate(\n    Specie = paste0(\"P. \", sp_code)\n  ) |&gt; \n  mutate(taulabel = gsub(\"-\", \"\\U2212\", taulabel))\n\n\n\nmk &lt;- bind_rows(mk_prec, mk_tmed)\n\nclima &lt;- aux |&gt; \n  filter(year &gt; 1969) |&gt;\n  dplyr::select(-tmax, -tmin) |&gt; \n  pivot_longer(c(prec, tmed), names_to = \"variable\", values_to = \"mean\") |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code)) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\",\"low\", \"medium\", \"high\")) \n\n\nto_label &lt;- as_labeller(c(\n  \"tmed\" = \"Annual Mean Temperature (ºC)\", \n  \"prec\" = \"Precipitation (mm)\"))\n\ncolours_elev &lt;- c(\"low-Dec\" = \"#8c510a\",\n                  \"low\" =\"#fc8d59\",\n                  \"medium\" = \"#2166ac\",\n                  \"high\" = \"#72A55A\")\n\nfigura_ts_clima &lt;- clima |&gt; \n  ggplot(aes(x = year, y = mean, group = elev_code, colour = elev_code)) +\n  geom_line() +\n  facet_grid(variable~factor(Specie, levels = c(\"P. halepensis\", \"P. pinaster\", \"P. nigra\", \"P. sylvestris\")), \n             scales = \"free_y\", \n             switch = \"y\",\n             labeller = labeller(variable = to_label)) +\n  scale_colour_manual(values = colours_elev, name = \"\",\n                      guide = guide_legend(override.aes = list(linewidth = 2))) + \n  scale_fill_manual(values = colours_elev, name=\"\") + \n  theme_bw() +\n  ylab(\"\") +  xlab(\"\") + \n  theme(\n    text = element_text(family = \"Helvetica\"),\n    panel.grid = element_blank(),\n    panel.background = element_blank(),\n    strip.text.x = element_text(face = \"italic\", size = 13),\n    strip.text.y = element_text(face = \"bold\", size = 12),\n    strip.background = element_blank(),\n    strip.placement = \"outside\", \n    legend.position = \"bottom\",\n    legend.text = element_text(size = 14),\n    axis.text = element_text(size = 13)\n  ) +\n  scale_x_continuous(limits = c(1970, 2022), breaks = seq(1971, 2021, by = 10)) +\n  geom_text(x = 1971, aes(y = ypos, label = taulabel), data = mk, parse = TRUE, show.legend = FALSE, hjust = \"left\", size = 4.5)\n\nfigura_ts_clima \n\n\n\n\n\nTime series (1971-2022) of climate variables at study sites. Within each species, lines represent the temporal series for different elevation sites, distinguished by different colors. Mann-Kendall tau values indicated were computed for each temporal series. Significant values of the trends are indicated: * p-value &lt; 0.05; ** p-value &lt; 0.01; *** p-value &lt; 0.001."
  },
  {
    "objectID": "analysis/figure_ts_dendro_remote.html",
    "href": "analysis/figure_ts_dendro_remote.html",
    "title": "Time series of EVI, NPP, ABI and ABI:NPP ratio",
    "section": "",
    "text": "This figure corresponds to figure S5 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(ggh4x)\nlibrary(Kendall)\nlibrary(trend)\nsource(\"../scripts/aux.R\")\n\nabi &lt;- read_csv(\"../data/abi.csv\") |&gt; \n  mutate(se = NA, sd = NA, variable = \"abi\") |&gt; \n  rename(mean = abi)\n\nnpp &lt;- read_csv(\"../data/npp_modis.csv\") |&gt; \n  rename(mean = npp) |&gt; \n  mutate(se = NA, sd = NA, variable = \"npp\") |&gt; \n  dplyr::select(year, sp_code, elev_code, sp_elev, mean, sd, se, variable) \n\nevi_landsat &lt;- read_csv(\"../data/iv_landsat.csv\") |&gt; \n  filter(iv == \"evi\") |&gt; \n  dplyr::select(year, sp_code, elev_code, mean, sd, se) |&gt; \n  mutate(variable = \"evi_landsat\")\n\nratio &lt;- read_csv(\"../data/ratio_abinpp.csv\") |&gt; \n  dplyr::select(year, sp_code, elev_code, sp_elev, mean = ratio) |&gt; \n  mutate(se = NA, sd = NA, variable = \"ratio\") \n\n\ndf &lt;- bind_rows(\n  abi, evi_landsat, npp, ratio) |&gt; \n  # mutate(elev_code = fct_recode(elev_code, `low-Dec` = \"low2\")) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\",\"low\", \"medium\", \"high\")) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code))\n\n\n# Import data trends \nmk_evi_landsat &lt;- read_csv(\"../data/iv_landsat_trend.csv\") |&gt; \n  dplyr::select(sp_code, elev_code, sp_elev, tau = mean_tau, pvalue_mk = mean_pvalue_mk,  senslope = mean_senslope, pvalue_sen= mean_pvalue_sen, ypos, p_value_string, taulabel) |&gt; \n  mutate(variable = \"evi_landsat\") \n\nmk_npp &lt;- read_csv(\"../data/npp_modis_trend.csv\") |&gt; \n  rename(tau = npp_tau, \n         pvalue_mk = npp_pvalue_mk,\n         senslope = npp_senslope,\n         pvalue_sen = npp_pvalue_sen) |&gt; \n  mutate(variable = \"npp\") |&gt; \n  mutate(ypos2 = case_when(\n    ypos == 1000 ~ 850, \n    ypos == 1025 ~ 925, \n    ypos == 1050 ~ 1000, \n    ypos == 1075 ~ 1075)) |&gt; \n  dplyr::select(-ypos, -Specie) |&gt; rename(ypos = ypos2) |&gt; \n  mutate(p_value_string = as.character(p_value_string)) \n\nmk_abi &lt;- read_csv(\"../data/abi_trend.csv\") |&gt; \n  rename(tau = mean_tau, \n         pvalue_mk = mean_pvalue_mk,\n         senslope = mean_senslope,\n         pvalue_sen = mean_pvalue_sen) |&gt; \n  mutate(variable = \"abi\") |&gt; \n  mutate(ypos2 = case_when(\n    ypos == 510 ~ 480, \n    ypos == 540 ~ 525, \n    ypos == 570 ~ 570, \n    ypos == 480 ~ 435)) |&gt; \n  dplyr::select(-ypos, -Specie) |&gt; rename(ypos = ypos2) |&gt; \n  mutate(p_value_string = as.character(p_value_string)) \n\n\nmk_ratio &lt;- ratio |&gt; \n  ungroup() |&gt; \n  group_by(sp_code, elev_code, sp_elev)|&gt; \n  summarise(across(c(mean), ~MannKendall(.)$tau, .names =\"tau\"),\n            across(c(mean), ~MannKendall(.)$sl, .names =\"pvalue_mk\"),\n            across(c(mean), ~trend::sens.slope(.)$estimate, .names =\"senslope\"),\n            across(c(mean), ~trend::sens.slope(.)$p.value, .names =\"pvalue_sen\")) |&gt; \n  mutate(ypos = \n           case_when(\n             elev_code == \"low\" ~ .44,\n             elev_code == \"low-Dec\" ~ .36,\n             elev_code == \"medium\" ~ .52,\n             elev_code == \"high\" ~ .6), \n         p_value_string = as.character(symnum(pvalue_mk, corr = FALSE,\n                                              cutpoints = c(0,  .001,.01,.05, 1),\n                                              symbols = c(\"***\",\"**\",\"*\",\"\"))),\n         variable = \"ratio\") |&gt; \n  mutate(taulabel = paste(expression(tau), \"==\", paste0('\"', round(tau, 3), p_value_string, '\"'))) |&gt; \n  mutate(\n    Specie = paste0(\"P. \", sp_code)\n  ) |&gt; \n  mutate(taulabel = gsub(\"-\", \"\\U2212\", taulabel))\n\n\nmk &lt;- bind_rows(mk_evi_landsat, mk_npp, mk_abi, mk_ratio) |&gt; \n  mutate(variable = fct_relevel(variable, \"evi_landsat\", \"npp\", \"abi\", \"ratio\")) |&gt; \n  # mutate(elev_code = fct_recode(elev_code, `low-Dec` = \"low2\")) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\",\"low\", \"medium\", \"high\")) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code))\n\n# replace minus sign in taulabel (−) by unicode \nmk$taulabel &lt;- gsub(\"−\", \"-\", mk$taulabel)\n\n\nto_label &lt;- as_labeller(c(\n  \"evi_landsat\" = \"EVI[Landsat]\", \n  \"npp\" = \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n  \"abi\" = \"ABI~(g~C~m^2~year^{-1})\", \n  \"ratio\" = \"ABI:NPP\"\n), default = label_parsed)\n\n\n### To add letters to the facet \nlabel_rows &lt;- data.frame(\n  variable = c(\"evi_landsat\", \"npp\", \"abi\", \"ratio\"),\n  letra = c(\"a\", \"b\", \"c\", \"d\")\n)\n\ndf &lt;- df |&gt; inner_join(label_rows)\nmk &lt;- mk |&gt; inner_join(label_rows)\n\nfig_ts &lt;- df |&gt; \n  filter(variable != \"evi_modis\") |&gt;\n  mutate(variable = fct_relevel(variable, \"evi_landsat\", \"npp\", \"abi\", \"ratio\")) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\",\"low\", \"medium\", \"high\")) |&gt; \n  ggplot(aes(x = year, y = mean, group = elev_code, colour = elev_code)) +\n  geom_ribbon(aes(ymin = (mean - se), ymax=(mean+se), fill=elev_code), colour=NA, alpha=.2) + \n  geom_line() +\n  ggh4x::facet_nested(letra + variable ~factor(Specie, levels = c(\"P. halepensis\", \"P. pinaster\", \"P. nigra\", \"P. sylvestris\")), \n               scales = \"free\", \n               switch = \"y\", \n               labeller = labeller(variable = to_label),\n               strip = ggh4x::strip_themed(\n                 text_y = list(\n                   element_text(face = \"bold\", size = 18, angle = 0),\n                   element_text(face = \"bold\", size = 18, angle = 0),\n                   element_text(face = \"bold\", size = 18, angle = 0),\n                   element_text(face = \"bold\", size = 18, angle = 0),\n                   element_text(face = \"bold\", size = 15),\n                   element_text(face = \"bold\", size = 15),\n                   element_text(face = \"bold\", size = 15),\n                   element_text(face = \"bold\", size = 15)\n                   ))) +\n  scale_colour_manual(values = colours_elev2, name = \"\") +\n  scale_fill_manual(values = colours_elev2, name=\"\") +\n  scale_y_continuous(sec.axis = dup_axis()) +\n  geom_text(aes(x = min(df$year, na.rm = TRUE) + 5, y = ypos, label = taulabel), \n            position = position_nudge(x = 5), \n            data = (mk |&gt; filter(variable != \"abi\")), \n            parse = TRUE, show.legend = FALSE, hjust = \"left\", size = 4.5) +\n  ggh4x::facetted_pos_scales(\n  x = list(\n    scale_x_continuous(limits = c(1958,2021), breaks = seq(1950, 2020, by = 20), minor_breaks = seq(1950, 2020, by = 10), guide = \"axis_minor\", sec.axis = dup_axis()), # halepensis\n    scale_x_continuous(limits = c(1950,2021), breaks = seq(1940, 2020, by = 20), minor_breaks = seq(1950, 2020, by = 10), guide = \"axis_minor\", sec.axis = dup_axis()), # pinaster\n    scale_x_continuous(limits = c(1959,2021), breaks = seq(1950, 2020, by = 20), minor_breaks = seq(1950, 2020, by = 10), guide = \"axis_minor\", sec.axis = dup_axis()), # nigra\n    scale_x_continuous(limits = c(1962,2021), breaks = seq(1950, 2020, by = 20), minor_breaks = seq(1950, 2020, by = 10), guide = \"axis_minor\", sec.axis = dup_axis())  # pinaster\n  )\n) +\n  theme_bw() +\n  ylab(\"\") +  xlab(\"\") + \n  theme(\n    text = element_text(family = \"Helvetica\"),\n    panel.grid = element_blank(),\n    panel.background = element_blank(),\n    strip.text.x = element_text(face = \"italic\", size = 12),\n    strip.background = element_blank(),\n    strip.placement = \"outside\", \n    legend.position = \"bottom\",\n    legend.text = element_text(size = 15),\n    axis.text.y = element_text(size = 13),\n    axis.text.x = element_text(size = 11),\n    ggh4x.axis.ticks.length.minor = rel(1)\n  ) \n\nfig_ts\n\n\n\n\n\nTime series of annual Enhanced Vegetation Index (EVI) (1986-2022) (a), annual Net Primary Productivity (NPP) (2001-2022) (b), Aboveground Biomass Increment (ABI) (1952-2022) (c), and ABI:NPP ratio (2001-2022) (d). Within each species, each line represents the temporal series for different elevation sites, distinguished by different colors. For annual EVI, ribbons represent the standard error of the annual values. Mann-Kendall tau values indicated were computed for each temporal series starting from 1986 for EVI and from 2001 for NPP and ABI:NPP ratio. Significant values of the trends are indicated: * p-value &lt; 0.05; ** p-value &lt; 0.01; *** p-value &lt; 0.001."
  },
  {
    "objectID": "analysis/model.html",
    "href": "analysis/model.html",
    "title": "Model ABI:NPP ratio",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(likelihood)\nlibrary(kableExtra)\nsource(\"../scripts/aux.R\")\n\nannual_pet &lt;- read_csv(\"../data/spei_climate.csv\") |&gt; \n  dplyr::select(sp_elev, year, monthly_pet, monthly_tmed, monthly_prec) |&gt; \n  group_by(sp_elev, year) |&gt;\n  summarise(pet = sum(monthly_pet), \n            prec = sum(monthly_prec),\n            tmed = mean(monthly_tmed, na.rm = TRUE)) |&gt; \n  rowwise() |&gt; \n  mutate(water_balance = prec - pet)\n\nratio &lt;- read_csv(\"../data/ratio_abinpp.csv\") |&gt; \n  dplyr::select(year, sp_code, elev_code, sp_elev, ratio_abi_npp = ratio) \n\ndf &lt;- ratio |&gt; \n  inner_join(annual_pet) |&gt; \n  pivot_longer(pet:water_balance, values_to = \"mean_climate\", \n               names_to = \"climate_variable\")"
  },
  {
    "objectID": "analysis/model.html#univariate-models",
    "href": "analysis/model.html#univariate-models",
    "title": "Model ABI:NPP ratio",
    "section": "Univariate models",
    "text": "Univariate models\n\nTemperature\n\\[(ABI:NPP)_i=MR \\times g(T_{med}) + \\epsilon_i\\] where:\n\n\\((ABI:NPP)_i\\) is the value of the ABI:NPP ratio for each site and year\n\\(MR\\) is a parameter representing the maximum ABI:NPP ratio (dimensionless)\n\\(\\epsilon_i\\) is the random error for each observation \\(i\\).\n\\(g(T_{med})\\) is a function with values between 0 and 1, which depends on temperature. This function, \\(g(T_{med})\\), can take different forms.\n\n\nProposed Functions for Temperature (Table S6)\n\nGaussian (mtrat1)\n\\[g(T_{med})=\\exp \\left[ -\\frac{1}{2} \\left(\\frac{TMED-T_{OPT}} {T_b}\\right)^2 \\right]\\]\nLog-normal (mtrat3)\n\\[g(T_{med})=\\exp \\left[ -\\frac{1}{2} \\left(\\frac{\\log{(\\frac{TMED}{T_{OPT}}}) }{T_b}\\right)^2 \\right]\\]\nLogistic modified (mtrat6)\n\\[g(T_{med})=(1-T_a) \\times \\left[\\frac{1}{1+\\exp (-k \\times (TMED - T_{OPT})) }\\right] + T_a\\]\n\nwhere:\n\n\\(TMED\\) is the value of the annual mean temperature\n\\(T_{OPT}\\) = optimum value of the annual mean temperature at which occur the maximum ratio (Lognormal and Gaussian models) or that represent the half-saturation point (logistic part in the Logistic modified model)\n\\(T_b\\) = scale parameter\n\\(k\\) = rate that determines the steepness of the logistic curve\n\\(T_a\\) = scaling factor that adjust the influence of the logistic function.\n\nThe error term in the model\n\\[(ABI:NPP)_i=MR \\times g(T_{med}) + \\epsilon_i\\] is assumed to follows a normal distribution \\(\\epsilon_i \\sim \\mathcal{N}(0,1)\\)\n\n\nCode\ndtmed &lt;- df |&gt; \n  filter(climate_variable == \"tmed\") |&gt; \n  dplyr::select(rat = ratio_abi_npp, tmed = mean_climate)\n\n\n\nmtrat1 &lt;- function(MR, Topt, Tb)\n{\n  tmed_effect &lt;- exp(-0.5*((dtmed$tmed - Topt)/Tb)^2)\n  MR * tmed_effect\n}\n\nmtrat3 &lt;- function(MR, Topt, Tb)\n{\n  tmed_effect &lt;- exp(-0.5*(log(dtmed$tmed/Topt)/Tb)^2)\n  MR * tmed_effect\n}\n\nmtrat6 &lt;- function(MR, k, Topt, Ta){\n  tmed_effect &lt;- (1-Ta)*(1 / (1 + exp(- k *( dtmed$tmed - Topt)))) + Ta \n  MR*tmed_effect\n}\n\n\nname_models &lt;- data.frame(\n  modelo = paste0(\"mtrat\",c(1,3,6)), \n  name_modelo = c(\"Gaussian\",\n                  \"Log-normal\",\n                  \"Logistic_Mod\")\n)\n\nvar=list(mean = \"predicted\", x = \"rat\", tmed = \"tmed\", log = TRUE)  \n\n## Guassian model (temp)\nset.seed(1234)\nresult_mtrat1 &lt;- anneal(\n  model = mtrat1, \n  var = var, \n  source_data = dtmed,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5),\n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 100000, \n  show_display = FALSE\n)\n\nresult_mtrat1 |&gt; \n  likelihood::write_results(\"../output/models/mtrat1.txt\")\n\n#Log-normal (temp)\nset.seed(1234)\n\nresult_mtrat3 &lt;- anneal(\n  model = mtrat3, \n  var = var, \n  source_data = dtmed,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5),\n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 100000, \n  show_display = FALSE\n)\n\nresult_mtrat3 |&gt; \n  likelihood::write_results(\"../output/models/mtrat3.txt\")\n\n# Logistic mod. (temp)\nset.seed(1234)\n\nresult_mtrat6 &lt;- anneal(\n  model = mtrat6, \n  var = var, \n  source_data = dtmed,\n  par = list(MR = 0.7, Ta = 0.09, k = -1, Topt = 10),\n  par_lo = list(MR = 0, Ta = 0, k = -2, Topt = 0),\n  par_hi = list(MR = 1, Ta = 0.2, k = 2, Topt = 20),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 100000, \n  show_display = FALSE\n)\n\nresult_mtrat6 |&gt; \n  likelihood::write_results(\"../output/models/mtrat6.txt\")\n\nall_results &lt;-\n  mget(\n    grep(\"^result_mtrat\", ls(), value = TRUE)\n  ) |&gt;\n  purrr::imap_dfr(~ MLE_results_format(.x, yvar = \"rat\"), .id = \"modelo\") |&gt;\n  arrange(aic_cor) |&gt;\n  mutate(modelo = str_remove(modelo, \"result_\"))\n\n\n# compute delta AIC and add computation time\nmodels_results &lt;- all_results |&gt;\n  # inner_join(all_time) |&gt;\n  inner_join(name_models) |&gt;\n  relocate(name_modelo, .after = modelo) |&gt; \n  mutate(deltaAIC = dAIC(aic_cor))\n\nmodels_results |&gt; \n  write_csv(\"../data/models_ratio_tmed_summary.csv\")\n\n\n\n\n\nPrecipitation\n\\[(ABI:NPP)_i=MR \\times g(PREC) + \\epsilon_i\\] where:\n\n\\((ABI:NPP)_i\\) is the value of the ABI:NPP ratio for each site and year\n\\(MR\\) is a parameter representing the maximum ABI:NPP ratio (dimensionless)\n\\(\\epsilon_i\\) is the random error for each observation \\(i\\)\n\\(g(PREC)\\) is a function with values between 0 and 1, which depends on precipitation. This function, \\(g(PREC)\\), can take different forms. #### Proposed Functions for Precipitation (Table S6)\nGaussian (mprecrat1)\n\\[g(Prec)=\\exp \\left[ -\\frac{1}{2} \\left(\\frac{PREC-P_{OPT}} {P_b}\\right)^2 \\right]\\]\nLog-normal (mprecrat3)\n\\[g(Prec)=\\exp \\left[ -\\frac{1}{2} \\left(\\frac{\\log{(\\frac{PREC}{P_{OPT}}}) }{P_b}\\right)^2 \\right]\\]\nGompertz (mprecrat5)\n\\[g(Prec)=P_a \\times \\exp \\left[ - P_d \\times \\exp (-Pc \\times PREC)\\right]\\]\nwhere:\n\\(PREC\\) is the value of the annual precipitation\n\\(P_{OPT}\\) = value of the precipitation at which the ABI:NPP ratio is expected to be optimum\n\\(P_b\\) = scale parameter that adjust for the variability in the response of the ABI:NPP ratio to changes in precipitation\n\\(P_a\\) = scaling factor\n\\(P_d\\) = modulates the amplitude of the exponential response\n\\(P_c\\) = parameter to control the sensitivity of the response to precipitation\n\n\n\nCode\ndprec&lt;- df |&gt; \n  filter(climate_variable == \"prec\") |&gt; \n  dplyr::select(rat = ratio_abi_npp, prec = mean_climate)\n\nmprecrat1 &lt;- function(MR, Popt, Pb)\n{\n  prec_effect &lt;- exp(-0.5*((dprec$prec - Popt)/Pb)^2)\n  MR * prec_effect \n}\n\nmprecrat3 &lt;- function(MR, Popt, Pb)\n{\n  prec_effect &lt;- exp(-0.5*(log(dprec$prec/Popt)/Pb)^2)\n  MR * prec_effect \n}\n\nmprecrat5 &lt;-  function(MR, Pa, Pd, Pc)\n{\n  prec_effect &lt;- Pa * exp(-Pd * exp (-Pc * dprec$prec))\n  MR * prec_effect\n}\n\nname_models &lt;- data.frame(\n  modelo = paste0(\"mprecrat\",c(1,3,5)),\n  name_modelo = c(\"Gaussian\",\n                  \"Log-normal\",\n                  \"Gompertz\")\n)\n\n# Gaussian (prec)\nset.seed(1234)\n\nresult_mprecrat1 &lt;- anneal(\n  model = mprecrat1, \n  var = var, \n  source_data = dprec,\n  par = list(MR = 0.7, Popt = 500, Pb = 200),\n  par_lo = list(MR = 0, Popt = 300, Pb = 0 ),\n  par_hi = list(MR = 1, Popt = 1000, Pb = 600),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 100000, \n  show_display = FALSE\n)\n\nresult_mprecrat1 |&gt; \n  likelihood::write_results(\"../output/models/mprecrat1.txt\")\n\n# Log-normal (prec)\n\nresult_mprecrat3 &lt;- anneal(\n  model = mprecrat3, \n  var = var, \n  source_data = dprec,\n  par = list(MR = 0.7, Popt = 500, Pb = 2),\n  par_lo = list(MR = 0, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Popt = 1000, Pb = 5),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 100000, \n  show_display = FALSE\n)\n\nresult_mprecrat3 |&gt; \n  likelihood::write_results(\"../output/models/mprecrat3.txt\")\n\n# Gompertz (prec)\nset.seed(1234)\n\nresult_mprecrat5 &lt;- anneal(\n  model = mprecrat5, \n  par = list(MR = 0.5, Pa = 0.4, Pd = 0.3, Pc = 0.003),\n  par_lo = list(MR = 0, Pa = 0.2, Pd = 0.01, Pc = 0.0001),\n  par_hi = list(MR = 1, Pa = 0.8, Pd = 5, Pc = 0.01), \n  var = var, \n  source_data = dprec,\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 100000, \n  show_display = FALSE\n)\n\nresult_mprecrat5 |&gt; \n  likelihood::write_results(\"../output/models/mprecrat5.txt\")\n\nall_results &lt;-\n  mget(\n    grep(\"^result_mprecrat\", ls(), value = TRUE)\n  ) |&gt;\n  purrr::imap_dfr(~ MLE_results_format(.x, yvar = \"rat\"), .id = \"modelo\") |&gt;\n  arrange(aic_cor) |&gt;\n  mutate(modelo = str_remove(modelo, \"result_\"))\n\nmodels_results &lt;- all_results |&gt;\n  inner_join(name_models) |&gt;\n  relocate(name_modelo, .after = modelo) |&gt; \n  mutate(deltaAIC = dAIC(aic_cor))\n\nmodels_results |&gt; \n  write_csv(\"../data/models_ratio_prec_summary.csv\")"
  },
  {
    "objectID": "analysis/model.html#multiplicative-models-temperature-and-precipitation",
    "href": "analysis/model.html#multiplicative-models-temperature-and-precipitation",
    "title": "Model ABI:NPP ratio",
    "section": "Multiplicative models (Temperature and Precipitation)",
    "text": "Multiplicative models (Temperature and Precipitation)\n\\[(ABI:NPP)_i=MR \\times g(T_{med}) \\times g(PREC) + \\epsilon_i\\] where:\n\n\\((ABI:NPP)_i\\) is the value of the ABI:NPP ratio for each site and year\n\\(MR\\) is a parameter representing the maximum ABI:NPP ratio (dimensionless)\n\\(\\epsilon_i\\) is the random error for each observation \\(i\\)\n\\(g(T_{med})\\) is a function with values between 0 and 1, which depends on temperature. This function, \\(g(T_{med})\\), can take different forms\n\\(g(PREC)\\) is a function with values between 0 and 1, which depends on precipitation. This function, \\(g(PREC)\\), can take different forms\n\n\n\nCode\nd &lt;- dtmed |&gt; inner_join(dprec)\n\nvar=list(mean = \"predicted\", x = \"rat\", prec = \"prec\", tmed = \"tmed\", log = TRUE)  \n\n### Temperature (Log-normal); Precipitation (Log-normal) (**mcombrat1**)\nmcombrat1 &lt;- function(MR, Topt, Tb, Popt, Pb){\n  # log-normal temperature\n  # log-normal prec \n  tmed_effect &lt;- exp(-0.5*(log(d$tmed/Topt)/Tb)^2) \n  prec_effect &lt;- exp(-0.5*(log(d$prec/Popt)/Pb)^2)\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(2023)\n\nresult_mcombrat1 &lt;- anneal(\n  model = mcombrat1, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5, Popt = 500, Pb = 2), \n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5, Popt = 1000, Pb = 5),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat1 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat1.txt\")\n\n### Temperature (Log-normal); Precipitation (Gauss) (**mcombrat2**)\nmcombrat2 &lt;- function(MR, Topt, Tb, Popt, Pb){\n  # log-normal temperature\n  # gauss prec \n  tmed_effect &lt;- exp(-0.5*(log(d$tmed/Topt)/Tb)^2) \n  prec_effect &lt;- exp(-0.5*((d$prec - Popt)/Pb)^2)\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(2023)\n\nresult_mcombrat2 &lt;- anneal(\n  model = mcombrat2, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5, Popt = 500, Pb = 200), \n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5, Popt = 1000, Pb = 600),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat2 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat2.txt\")\n\n### Temperature (Log-normal); Precipitation (Gompertz) (**mcombrat3**)\nmcombrat3 &lt;- function(MR, Topt, Tb, Pa, Pd, Pc){\n  # log-normal temperature\n  # gompertz prec \n  tmed_effect &lt;- exp(-0.5*(log(d$tmed/Topt)/Tb)^2) \n  prec_effect &lt;- Pa * exp(-Pd * exp (-Pc * d$prec))\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(1234)\nresult_mcombrat3 &lt;- anneal(\n  model = mcombrat3, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5, Pa = 0.4, Pd = 0.3, Pc = 0.003), \n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01, Pa = 0.2, Pd = 0.01, Pc = 0.0001),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5, Pa = 0.8, Pd = 5, Pc = 0.01),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat3 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat2.txt\")\n\n### Temperature (Gauss); Precipitation (Log-normal) (**mcombrat4**)\nmcombrat4 &lt;- function(MR, Topt, Tb, Popt, Pb){\n  # gauss temperature\n  # log-normal prec \n  tmed_effect &lt;- exp(-0.5*((d$tmed - Topt)/Tb)^2)\n  prec_effect &lt;- exp(-0.5*(log(d$prec/Popt)/Pb)^2)\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(2023)\n\n# change model \nresult_mcombrat4 &lt;- anneal(\n  model = mcombrat4, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5, Popt = 500, Pb = 2), \n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5, Popt = 1000, Pb = 5),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat4 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat1.txt\")\n\n### Temperature (Gauss); Precipitation (Gauss) (**mcombrat5**)\nmcombrat5 &lt;- function(MR, Topt, Tb, Popt, Pb){\n  # gauss temperature\n  # gauss prec \n  tmed_effect &lt;- exp(-0.5*((d$tmed - Topt)/Tb)^2) \n  prec_effect &lt;- exp(-0.5*((d$prec - Popt)/Pb)^2)\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(2023)\n\nresult_mcombrat5 &lt;- anneal(\n  model = mcombrat5, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5, Popt = 500, Pb = 200), \n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5, Popt = 1000, Pb = 600),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat5 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat5.txt\")\n\n### Temperature (Gauss); Precipitation (Gompertz) (**mcombrat6**)\nmcombrat6 &lt;- function(MR, Topt, Tb, Pa, Pd, Pc){\n  # gauss temperature\n  # gompertz prec \n  tmed_effect &lt;- exp(-0.5*((d$tmed - Topt)/Tb)^2)\n  prec_effect &lt;- Pa * exp(-Pd* exp (-Pc * d$prec))\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(1234)\n\nresult_mcombrat6  &lt;- anneal(\n  model = mcombrat6, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Topt = 10.5, Tb = 1.5, Pa = 0.4, Pd = 0.3, Pc = 0.003), \n  par_lo = list(MR = 0, Topt = 5, Tb = 0.01, Pa = 0.2, Pd = 0.01, Pc = 0.0001),\n  par_hi = list(MR = 1, Topt = 20, Tb = 5, Pa = 0.8, Pd = 5, Pc = 0.01),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat6 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat6.txt\")\n\n### Temperature (Logistic mod.); Precipitation (Log-normal) (**mcombrat7**)\nmcombrat7 &lt;- function(MR, Ta, k, Topt, Popt, Pb){\n  # log-mod temperature\n  # log-normal prec \n  tmed_effect &lt;- (1-Ta)*(1 / (1 + exp(- k *( dtmed$tmed - Topt)))) + Ta \n  prec_effect &lt;- exp(-0.5*(log(d$prec/Popt)/Pb)^2)\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(123456)\n\nresult_mcombrat7 &lt;- anneal(\n  model = mcombrat7, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Ta = 0.09, k = -1, Topt = 10, Popt = 500, Pb = 2), \n  par_lo = list(MR = 0, Ta = 0, k = -2, Topt = 0, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Ta = 0.2, k = 2, Topt = 20, Popt = 1000, Pb = 5),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat7 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat7.txt\")\n\n### Temperature (Logistic mod.); Precipitation (Gaussian) (**mcombrat8**)\nmcombrat8 &lt;- function(MR, Ta, k, Topt, Popt, Pb){\n  # log-mod temperature\n  # gauss prec \n  tmed_effect &lt;- (1-Ta)*(1 / (1 + exp(- k *( dtmed$tmed - Topt)))) + Ta \n  prec_effect &lt;- exp(-0.5*((d$prec - Popt)/Pb)^2)\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(2023)\n\nresult_mcombrat8 &lt;- anneal(\n  model = mcombrat8, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Ta = 0.09, k = -1, Topt = 10, Popt = 500, Pb = 200), \n  par_lo = list(MR = 0, Ta = 0, k = -2, Topt = 0, Popt = 300, Pb = 0),\n  par_hi = list(MR = 1, Ta = 0.2, k = 2, Topt = 20, Popt = 1000, Pb = 600),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat8 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat8.txt\")\n\n### Temperature (Logistic mod.); Precipitation (Gompertz) (**mcombrat9**)\nmcombrat9 &lt;- function(MR, Ta, k, Topt, Pa, Pd, Pc){\n  # log-mod temperature\n  # gompertz prec \n  tmed_effect &lt;- (1-Ta)*(1 / (1 + exp(- k *( dtmed$tmed - Topt)))) + Ta \n  prec_effect &lt;- Pa * exp(-Pd * exp (-Pc * d$prec))\n  MR * tmed_effect * prec_effect\n}\n\nset.seed(1234)\nresult_mcombrat9  &lt;- anneal(\n  model = mcombrat9, \n  var = var, \n  source_data = d,\n  par = list(MR = 0.7, Ta = 0.09, k = -1, Topt = 10, Pa = 0.4, Pd = 0.3, Pc = 0.003), \n  par_lo = list(MR = 0, Ta = 0, k = -2, Topt = 0, Pa = 0.2, Pd = 0.01, Pc = 0.0001),\n  par_hi = list(MR = 1, Ta = 0.2, k = 2, Topt = 20, Pa = 0.8, Pd = 5, Pc = 0.01),\n  pdf = dnorm,\n  dep_var = \"rat\",\n  initial_temp = 5, \n  temp_red = 0.975, \n  max_iter = 200000, \n  show_display = FALSE\n)\n\nresult_mcombrat9 |&gt; \n  likelihood::write_results(\"../output/models/mcombrat9.txt\")\n\n\n\nComparison multiplicative models\n\nIt corresponds with table S4 of the manuscript\n\n\n\nCode\nall_results &lt;-\n  mget(\n    grep(\"^result_mcombrat\", ls(), value = TRUE)\n  ) |&gt;\n  purrr::imap_dfr(~ MLE_results_format(.x, yvar = \"rat\"), .id = \"modelo\") |&gt;\n  arrange(aic_cor) |&gt;\n  mutate(modelo = str_remove(modelo, \"result_\"))\n\nname_models &lt;- data.frame(\n  modelo = paste0(\"mcombrat\",c(1:9)),\n  name_modelo = c(\"Temp (Log-normal) | Prec (Log-normal)\", \n                  \"Temp (Log-normal) | Prec (Gaussian)\", \n                  \"Temp (Log-normal) | Prec (Gompertz)\", \n                  \"Temp (Gaussian) | Prec (Log-normal)\", \n                  \"Temp (Gaussian) | Prec (Gaussian)\", \n                  \"Temp (Gaussian) | Prec (Gompertz)\", \n                  \"Temp (Logistic_Mod) | Prec (Log-normal)\", \n                  \"Temp (Logistic_Mod) | Prec (Gaussian)\", \n                  \"Temp (Logistic_Mod) | Prec (Gompertz)\")\n)\n\n\n# compute delta AIC and add computation time\nmodels_results &lt;- all_results |&gt;\n  inner_join(name_models) |&gt;\n  relocate(name_modelo, .after = modelo) |&gt; \n  mutate(deltaAIC = dAIC(aic_cor)) |&gt; \n  mutate(w = wAIC(deltaAIC)) \n\nmodels_results |&gt;\n  write_csv(\"../data/models_ratio_combined_summary.csv\")\n\n\n\n\nCode\nm &lt;- models_results\ncolnames(m) &lt;- c(\n  \"code\", \"Model name\", \"Log-Likelihood\", \"#par\",   \"AICc\", \"AIC\", \"R2\", \"Slope\",   \"RMSE\", \"Delta-AICc\", \"Weight AIC\"\n)\n\nm |&gt; \n  kbl(digits = c(0,0,2,0,2,2,3,3,3,3,3), escape = FALSE) |&gt; \n  kable_styling()\n\n\n\n\n\ncode\nModel name\nLog-Likelihood\n#par\nAICc\nAIC\nR2\nSlope\nRMSE\nDelta-AICc\nWeight AIC\n\n\n\n\nmcombrat1\nTemp (Log-normal) | Prec (Log-normal)\n-233.77\n5\n477.79\n477.54\n0.444\n0.999\n0.101\n0.000\n0.184\n\n\nmcombrat2\nTemp (Log-normal) | Prec (Gaussian)\n-233.79\n5\n477.82\n477.58\n0.436\n1.002\n0.102\n0.038\n0.180\n\n\nmcombrat4\nTemp (Gaussian) | Prec (Log-normal)\n-233.84\n5\n477.91\n477.67\n0.416\n1.004\n0.103\n0.128\n0.172\n\n\nmcombrat5\nTemp (Gaussian) | Prec (Gaussian)\n-233.86\n5\n477.95\n477.71\n0.408\n0.998\n0.104\n0.167\n0.169\n\n\nmcombrat7\nTemp (Logistic_Mod) | Prec (Log-normal)\n-233.64\n6\n479.62\n479.28\n0.501\n0.989\n0.095\n1.833\n0.073\n\n\nmcombrat8\nTemp (Logistic_Mod) | Prec (Gaussian)\n-233.66\n6\n479.67\n479.33\n0.491\n1.001\n0.096\n1.883\n0.072\n\n\nmcombrat3\nTemp (Log-normal) | Prec (Gompertz)\n-233.78\n6\n479.91\n479.57\n0.439\n1.019\n0.101\n2.123\n0.064\n\n\nmcombrat6\nTemp (Gaussian) | Prec (Gompertz)\n-233.84\n6\n480.02\n479.68\n0.415\n0.998\n0.103\n2.230\n0.060\n\n\nmcombrat9\nTemp (Logistic_Mod) | Prec (Gompertz)\n-233.64\n7\n481.74\n481.28\n0.501\n1.005\n0.096\n3.951\n0.025"
  },
  {
    "objectID": "analysis/figure_soil.html",
    "href": "analysis/figure_soil.html",
    "title": "Soil features of the sampling sites",
    "section": "",
    "text": "This figure corresponds to figure S8 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggtern)\nlibrary(patchwork)\nlibrary(gridExtra)\nlibrary(lemon)\nsource(\"../scripts/aux.R\")\n\n\n### Physico-Chemical features  \n#### Texture \nsoil_fq &lt;- read_csv(\"../data/soil_data.csv\") |&gt; \n  mutate(species = paste0(\"P. \", sp_code)) |&gt;\n  mutate(elev_code = case_when(\n    elev_code == \"low2\" ~ \"low-Dec\", \n    TRUE ~ elev_code\n  )) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\", \"low\", \"medium\", \"high\")) |&gt; \n  mutate(sp_code = fct_relevel(sp_code, \"halepensis\",\"pinaster\", \"nigra\", \"sylvestris\")) \n\n# Plots parameters \ncustom_theme &lt;- list(\n  labs(yarrow = \"Clay (%)\",\n       zarrow = \"Silt (%)\", \n       xarrow = \"Sand (%)\"),\n  theme_bw(),\n  ggplot2::xlab(\"\"),\n  ggplot2::ylab(\"\"), \n  ggtern::zlab(\"\"),\n  theme_showarrows(),\n  theme_showgrid(),\n  scale_shape_manual(values = shape_elev, name = \"Elevation\"),\n  scale_colour_manual(values = colours_Specie, labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")), name = \"Species\"),\n  scale_fill_manual(values = colours_Specie, labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n                    name = \"Species\"),\n  # tern_limits(T=0.4, L = 0.8, R=0.5) \n  tern_limits(T=1, L = 1, R=1),\n  theme(\n    tern.axis.arrow.text = element_text(size = 14, face = \"bold\"), \n    tern.axis.arrow.text.T = element_text(vjust = -1), # clay\n    tern.axis.arrow.text.L = element_text(vjust = -1), # sand\n    tern.axis.arrow.text.R = element_text(vjust = 1), # silt\n    tern.axis.text = element_text(size = 14),\n    plot.title = element_text(face = \"bold\")\n  )\n)\n\n\ngsup &lt;- soil_fq |&gt; \n  filter(type == \"Textura Superficial\") |&gt; \n  dplyr::select(-res, -layer, -type) |&gt; \n  pivot_wider(values_from = value, \n              names_from = soil_var)\n\nplot_sup &lt;- ggtern(data = gsup, \n                   aes(x = arena_sup, y = arcilla_sup, z = limo_sup, \n                       color = species, fill = species)) +\n  geom_point(size = 5, aes(shape = elev_code), alpha = 0.8) +\n  ggtitle(\"A\", subtitle = \"Soil texture surface (25-30 cm)\") +\n  custom_theme \n\n\ngsub &lt;- soil_fq |&gt; \n  filter(type == \"Textura Subsuperficial\") |&gt; \n  dplyr::select(-res, -layer, -type) |&gt; \n  pivot_wider(values_from = value, \n              names_from = soil_var)\n\nplot_sub &lt;- ggtern(data = gsub, \n                   aes(x = arena_sub, y = arcilla_sub, z = limo_sub, \n                       color = species, fill = species)) +\n  geom_point(size = 5, aes(shape = elev_code), alpha = 0.8) +\n  ggtitle(\"B\", subtitle = \"Soil texture subsurface (&gt;30 cm)\") +\n  custom_theme\n\n\n\n\ncommon_legend &lt;- lemon::g_legend(plot_sub + theme(legend.position = \"bottom\",\n                                                  legend.background = element_blank()))\n\ncombined_ggtern &lt;- ggtern::grid.arrange(plot_sup + \n                                          theme(legend.position = \"hidden\",\n                                                plot.margin = unit(c(t=0.4, r=-5, b=-.6, l=0), \"cm\")),\n                                        plot_sub + \n                                          theme(legend.position = \"hidden\",\n                                                plot.margin = unit(c(t=0.4, r=0, b=-.6, l=-5), \"cm\")),\n                                        common_legend,\n                                        # nrow = 1, \n                                        # widths = c(2,2,0.5),\n                                        layout_matrix = matrix(c(1, 3, 2, 3), nrow = 2), \n                                        heights = c(5,1))\n\n\n\n\n\nTernary soil maps showing percent composition of sand, clay and silt of the studied sites, for surface (up to 25-30 cm depth) (a) and subsurface (&gt; 30 cm depth) soils (b)."
  },
  {
    "objectID": "analysis/figure_droughts.html",
    "href": "analysis/figure_droughts.html",
    "title": "Drought events",
    "section": "",
    "text": "This figure corresponds to figure S3 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\nFigure\n\n\nCode\nlibrary(tidyverse)\nsource(\"../scripts/aux.R\")\nlibrary(Kendall)\nlibrary(trend)\nlibrary(scico)\n\n# Read spei data\nspei_data &lt;- read_csv(\"../data/spei_climate.csv\")\n\n# Select spei06 y spei12 data\ns &lt;- spei_data |&gt;\n  dplyr::select(sp_elev, year, month, spei06, spei12) |&gt;\n  pivot_longer(c(spei06, spei12), names_to = \"spei\") |&gt;\n  filter(!is.na(value))\n\nspei_events &lt;- s |&gt;\n  group_by(spei, sp_elev) |&gt;\n  nest() |&gt;\n  mutate(drought_results = purrr::map(data, ~ droughtIndicators(., \"value\", -1.28)$drought_assessment)) |&gt;\n  unnest(drought_results) |&gt;\n  select(-data)\n\nd &lt;- spei_events |&gt;\n  separate(rangeDate, into = c(\"minmonth\", \"maxmonth\"), remove = FALSE) |&gt;\n  unite(\"start_date\", minyear, minmonth, sep = \"-\", remove = FALSE) |&gt;\n  unite(\"end_date\", maxyear, maxmonth, sep = \"-\", remove = FALSE) |&gt;\n  mutate(start_date = as.Date(paste0(start_date, \"-01\"), format = \"%Y-%b-%d\")) |&gt;\n  mutate(end_date = as.Date(paste0(end_date, \"-01\"), format = \"%Y-%b-%d\")) |&gt;\n  rowwise() |&gt;\n  mutate(middate = (start_date + ((end_date - start_date) / 2)))\n\n\n#### Drought events SPEI-12\nd12 &lt;- d |&gt;\n  filter(spei == \"spei12\") |&gt;\n  ungroup() |&gt;\n  dplyr::select(sp_elev, d_duration, d_intensity, d_severity, lowest_spei, month_peak, start_date, end_date, middate) |&gt;\n  separate(sp_elev, c(\"sp_code\", \"elev_code\"), sep = \"_\", remove = FALSE) |&gt;\n  mutate(species = paste0(\"P. \", sp_code))\n\nimage_data &lt;- data.frame(\n  species = c(\"P. sylvestris\", \"P. nigra\", \"P. pinaster\", \"P. halepensis\"),\n  elev_code = c(\"medium\", \"medium\", \"low\", \"medium\"),\n  middate = ymd(\"1970-01-01\"),\n  img = c(\"../data/images/sylvestris.png\", \"../data/images/nigra.png\", \n          \"../data/images/pinaster.png\", \"../data/images/halepensis.png\") \n)\n\nplot_droughts &lt;- d12 |&gt;\n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\", \"low\", \"medium\", \"high\")) |&gt;\n  ggplot(aes(y = elev_code)) +\n  geom_point(aes(x = middate, y = elev_code, size = d_severity, color = d_duration)) +\n  labs(size = \"Drought severity\", x = \"Year\", y = \"Elevation\") +\n  facet_wrap(~ factor(species, levels = c(\"P. sylvestris\", \"P. nigra\", \"P. pinaster\", \"P. halepensis\")), \n             ncol = 1, scales = \"free_y\") +\n  theme_bw() +\n  ggimage::geom_image(\n    data = image_data,\n    aes(x = middate, y = elev_code, image = img), size = 0.8, asp = 0.5\n  ) +\n  scale_color_scico(\n    palette = \"vik\", direction = 1,\n    name = \"Drought duration (months)\",\n    limits = c(2, 20)\n  ) +\n  scale_x_date(\n    limits = c(ymd(\"1970-01-01\"), ymd(\"2023-01-01\")),\n    breaks = seq.Date(from = ymd(\"1970-01-01\"), to = ymd(\"2023-01-01\"), by = \"5 years\"),\n    date_labels = \"%Y\",\n    date_minor_breaks = \"1 year\"\n  ) +\n  theme(\n    strip.background = element_blank(),\n    strip.text = element_text(face = \"italic\", hjust = 0),\n    legend.position = \"bottom\"\n  ) +\n  guides(\n    color = guide_colorbar(title.hjust = 0.5), #\n    size = guide_legend(title.hjust = 0.5)\n  )\n\nplot_droughts\n\n\n\n\n\nDrought events calculated from the SPEI drought index (12-month scale) for the period 1980-2023 at the study sites. Each dot represents a severe drought event. Dot size is proportional to the drought severity. Drought severity was estimated as the sum of the absolute SPEI values during the drought period."
  },
  {
    "objectID": "analysis/figure_evi_lai.html",
    "href": "analysis/figure_evi_lai.html",
    "title": "Relationship between LAI vs. EVI",
    "section": "",
    "text": "This figure corresponds to figure S7 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\n\nCode\nlibrary(tidyverse)\n\nsource(\"../scripts/aux.R\")\n\n\nstand &lt;- read_csv(\"../data/stand_summary.csv\") |&gt;\n  dplyr::select(-locality, -site_code, -elev_category) |&gt; \n  separate(sp_elev, into = c(\"sp_code\", \"elev_code\"), remove = FALSE) |&gt; \n  mutate(elev_code = fct_recode(elev_code, \n                                `low-Dec` = \"low2\",\n                                \"medium\" = \"med\")) |&gt; \n  # mutate(elev_code = fct_recode(elev_code, \"medium\" = \"med\")) |&gt;\n  unite(\"sp_elev\", c(sp_code, elev_code), remove = FALSE) \n\nevi_landsat &lt;- read_csv(\"../data/iv_landsat.csv\") |&gt;\n  filter(iv == \"evi\") |&gt;\n  dplyr::select(year, sp_code, elev_code, sp_elev, evi = mean) |&gt;\n  mutate(variable = \"evi_landsat\")  |&gt; \n  mutate(species = paste0(\"P. \", sp_code))\n\nd &lt;- evi_landsat |&gt; \n  left_join(\n    (stand |&gt; dplyr::select(sp_elev, lai, dentreec, bac)), by = \"sp_elev\") |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\", \"low\", \"medium\", \"high\")) |&gt;\n  mutate(sp_code = fct_relevel(sp_code, \"halepensis\",\"pinaster\", \"nigra\", \"sylvestris\")) |&gt; \n  mutate(species = fct_relevel(species, \"P. halepensis\",\"P. pinaster\", \"P. nigra\", \"P. sylvestris\")) \n\nsummary_evi &lt;- evi_landsat |&gt; \n  group_by(sp_elev, elev_code, species, sp_code) |&gt;\n  summarise(\n    evi_avg = mean(evi), \n    evi_avg_sd = sd(evi), \n    evi_avg_se = sqrt(evi_avg_sd/length(evi))) |&gt; \n  left_join(\n    (stand |&gt; dplyr::select(sp_elev, lai, dentreec, bac)), by = \"sp_elev\")\n\n\np &lt;- ggplot(summary_evi, \n            aes(x = lai, y = evi_avg)) +\n  geom_point(data = d, \n             aes(y = evi, x = lai, fill = species, color = species), \n             size = .5, \n             alpha = 0.7) + \n  geom_point(aes(shape = elev_code, \n                 fill = species, color = species, size = bac), \n             alpha = 0.7, \n             stroke = 1) + \n  scale_shape_manual(\n    values = shape_elev, \n    name = \"Elevation\") + \n  scale_colour_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\") +\n  scale_fill_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\") +\n  scale_size_continuous(name = expression(BA~(m^2~ha^{-1}))) + \n  #scale_size_continuous(name = \"Tree Density\\n(ind/ha)\") +\n  theme_bw() +\n  ylab(expression(EVI[Landsat])) +\n  xlab(expression(LAI~(m^2~m^{-2}))) +\n  theme(\n    panel.grid = element_blank()\n  ) +\n  scale_y_continuous(limits = c(0,0.5)) +\n  scale_x_continuous(limits = c(1, 4)) \n\n\np_evi_lai &lt;- p + theme(\n  panel.grid = element_blank(),\n  legend.text = element_text(size =  7),\n  legend.title = element_text(size =  8),\n  legend.box = \"horizontal\",        \n  legend.position = c(0.98, 0.02),\n  legend.justification = c(1, 0),   \n  legend.background = element_rect(fill = alpha(\"white\", 0.8), colour = NA),\n  axis.title = element_text(size = 14, face = \"bold\")\n) +\n  guides(\n    colour = guide_legend(order = 1),\n    fill = guide_legend(order = 1),\n    shape = guide_legend(order = 2, \n                         override.aes = list(stroke = .5, size = 3, colour = \"black\")), \n    size = guide_legend(order = 3))  \n\nnls_model_evi_lai &lt;- nls(evi_avg ~ a + b * log(lai), data = summary_evi, \n                         start = list(a = 0.2, b = 0.1))\n\nobserved &lt;- summary_evi$evi_avg\n# Sum of Squared Residuals (SSR)\nSSR &lt;- sum((observed - predict(nls_model_evi_lai))^2)\n# Total Sum of Squares (TSS)\nTSS &lt;- sum((observed - mean(observed))^2)\n# R-squared\nr2_evi_lai &lt;- 1 - (SSR / TSS)\n\n\np_evi_lai &lt;- p_evi_lai + geom_smooth(data = summary_evi,\n                                     method = \"nls\", \n                                     formula = y ~ a + b * log(x), \n                                     method.args = list(start = list(a = 0.2, b = 0.1)), \n                                     se = FALSE, colour = \"black\", linetype = \"dashed\") +\n  annotate(\"text\", x = 1.4, y = 0.5, label= sprintf(\"R^2 == %.3g\", round(r2_evi_lai, 2)),\n           color=\"black\",\n           parse = TRUE, \n           size = 6)\n\np_evi_lai\n\n\n\n\n\nRelationship between Leaf Area Index (LAI, \\(m^{2} \\cdot m^{-2}\\)) and the Enhanced Vegetation Index (\\(EVI_{Landsat}\\)) across the studied sites. Small dots represent annual EVI values while larger dots represent average value of EVI in each study site. The size of big dots is proportional to the basal area of the study sites (\\(m^2 \\cdot ha^{-1}\\))."
  },
  {
    "objectID": "analysis/figure_abi_npp_evi.html",
    "href": "analysis/figure_abi_npp_evi.html",
    "title": "Correlation ABI, NPP and EVI",
    "section": "",
    "text": "This figure corresponds to figure 4 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\n\nCode\n# pkgs \nlibrary(tidyverse)\nlibrary(boot)\nlibrary(patchwork)\nlibrary(here)\nlibrary(glue)\nlibrary(broom)\nsource(here::here(\"scripts/aux.R\"))\n\noptions(scipen = 999)\n\n# Read data\n## A\nabi &lt;- read_csv(here::here(\"data/abi.csv\")) |&gt; \n  mutate(se = NA, sd = NA, variable = \"abi\") |&gt; \n  rename(mean = abi)\n\n## EVI Landsat \nevi_landsat &lt;- read_csv(here::here(\"data/iv_landsat.csv\")) |&gt;\n  filter(iv == \"evi\") |&gt;\n  dplyr::select(year, sp_code, elev_code, sp_elev, mean, sd, se) |&gt;\n  mutate(variable = \"evi_landsat\")\n\nnpp &lt;- read_csv(here::here(\"data/npp_modis.csv\")) |&gt;\n  rename(mean = npp) |&gt;\n  mutate(se = NA, sd = NA, variable = \"npp\") |&gt;\n  dplyr::select(year, sp_code, elev_code, sp_elev, mean, sd, se, variable)\n\n\ndf_index &lt;- bind_rows(\n  abi, evi_landsat, npp\n) |&gt;\n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\", \"low\", \"medium\", \"high\")) |&gt;\n  mutate(sp_code = fct_relevel(sp_code, \"halepensis\",\"pinaster\", \"nigra\", \"sylvestris\")) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code)) |&gt;\n  mutate(Specie = fct_relevel(Specie, \"P. halepensis\",\"P. pinaster\", \"P. nigra\", \"P. sylvestris\")) |&gt; \n  rename(mean_y = mean, y_variable = variable) \n\nabi_npp &lt;- df_index |&gt;\n  filter(y_variable %in% c(\"abi\", \"npp\")) |&gt;\n  dplyr::select(-se, -sd) |&gt;\n  pivot_wider(values_from = mean_y, names_from = y_variable) |&gt;\n  filter(!is.na(npp)) |&gt;\n  filter(!is.na(abi)) |&gt;\n  rowwise() |&gt;\n  mutate(ratio = abi / npp)\n\n\n## ABI vs NPP\n# Generate a confidence interval with bootstrap\n# Define a function to perform the bootstrapping\nboot_func_abi_npp &lt;- function(data, indices) {\n  # Take a bootstrap sample\n  sample_df &lt;- data[indices, ]\n  # Fit the non-linear model\n  nls_fit &lt;- nls(abi ~ a * exp(b * npp), data = sample_df, start = list(a = 10, b = 0.002958839))\n  # Generate predicted values for a sequence of npp\n  npp_seq &lt;- seq(min(data$npp), max(data$npp), length.out = 100)\n  pred &lt;- predict(nls_fit, newdata = data.frame(npp = npp_seq))\n  return(pred)\n}\n\n\n# Perform bootstrapping with 1000 resamples\nboot_res_abi_npp &lt;- boot(data = abi_npp, statistic = boot_func_abi_npp, R = 1000) # R is the number of resamples\n\n\n# Compute the 95% confidence intervals for each point\nci_lower &lt;- apply(boot_res_abi_npp$t, 2, quantile, probs = 0.025) # Lower 2.5%\nci_upper &lt;- apply(boot_res_abi_npp$t, 2, quantile, probs = 0.975) # Upper 97.5%\n\n# Predicted values from the original fit\nnpp_seq &lt;- seq(min(abi_npp$npp), max(abi_npp$npp), length.out = 100)\npred_abi_npp &lt;- apply(boot_res_abi_npp$t, 2, mean) # Mean of the bootstrapped predictions\n\n# Create a data frame with predicted values and confidence intervals\npred_df_abi_npp &lt;- data.frame(\n  npp = npp_seq,\n  abi = pred_abi_npp,\n  ci_lower = ci_lower,\n  ci_upper = ci_upper\n)\n\nlabi_npp &lt;- abi_npp |&gt; \n  group_by(sp_code) |&gt; \n  group_modify(~ {\n    # Ajusta el modelo\n    mod &lt;- lm(abi ~ npp, data = .x)\n    # Tidy con coeficientes\n    tidy_df &lt;- broom::tidy(mod)\n    # Añade R2 a cada fila\n    tidy_df$r.squared &lt;- broom::glance(mod)$r.squared\n    \n    tidy_df\n  }) |&gt; \n  mutate(p = case_when(\n    p.value &lt; 0.001 ~ \"&lt;0.001\",\n    p.value &gt;= 0.001 ~ as.character(round(p.value, 3))\n  )) |&gt; \n  mutate(sig = case_when(\n    p.value &lt; 0.001 ~ \"sig\",\n    p.value &gt;= 0.001 ~ \"no sig\"  \n  )) \n\ny_max_abi &lt;- 450\n\nlabi_npp_eq &lt;- labi_npp |&gt; \n  left_join(\n    labi_npp |&gt; filter(term == \"(Intercept)\") |&gt; \n      dplyr::select(sp_code, intercept = estimate)\n  ) |&gt; \n  mutate(\n    eq_text = if_else(\n      sig == \"sig\", \n      glue(\"y = {round(estimate, 2)}x {ifelse(intercept &lt; 0, '-', '+')} {round(abs(intercept), 2)}; R² = {round(r.squared, 2)}\"),\n     NA\n    )\n  ) |&gt; \n  filter(term != \"(Intercept)\") |&gt; \n  arrange(desc(sig)) |&gt; # ordenar por eq \n  rowid_to_column(\"id\") |&gt; \n  mutate(offset_y = id * 0.05 * y_max_abi, \n         y_max = y_max_abi - offset_y) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code))\n\n\nabi_npp &lt;- \n  abi_npp |&gt; inner_join(\n    labi_npp_eq|&gt; dplyr::select(sp_code, p, sig))\n\n\n## ABI vs EVI\nabi_evi &lt;- df_index |&gt;\n  filter(y_variable %in% c(\"abi\", \"evi_landsat\")) |&gt;\n  dplyr::select(-se, -sd) |&gt;\n  pivot_wider(values_from = mean_y, names_from = y_variable) |&gt;\n  filter(!is.na(evi_landsat)) |&gt;\n  filter(!is.na(abi))\n\n\n# Generate a confidence interval with bootstrap\n# Define a function to perform the bootstrapping\nboot_func_abi_evi &lt;- function(data, indices) {\n  # Take a bootstrap sample\n  sample_df &lt;- data[indices, ]\n  # Fit the non-linear model\n  nls_fit &lt;- nls(abi ~ a * exp(b * evi_landsat), data = sample_df, start = list(a = 15, b = 6.128))\n  # Generate predicted values for a sequence of npp\n  evi_seq &lt;- seq(min(data$evi_landsat), max(data$evi_landsat), length.out = 100)\n  pred &lt;- predict(nls_fit, newdata = data.frame(evi_landsat = evi_seq))\n  return(pred)\n}\n\n# Perform bootstrapping with 1000 resamples\nboot_res_abi_evi &lt;- boot(data = abi_evi, statistic = boot_func_abi_evi, R = 1000) # R is the number of resamples\n\n# Compute the 95% confidence intervals for each point\nci_lower &lt;- apply(boot_res_abi_evi$t, 2, quantile, probs = 0.025) # Lower 2.5%\nci_upper &lt;- apply(boot_res_abi_evi$t, 2, quantile, probs = 0.975) # Upper 97.5%\n\n# Predicted values from the original fit\nevi_seq &lt;- seq(min(abi_evi$evi_landsat), max(abi_evi$evi_landsat), length.out = 100)\npred_abi_evi &lt;- apply(boot_res_abi_evi$t, 2, mean) # Mean of the bootstrapped predictions\n\n# Create a data frame with predicted values and confidence intervals\npred_df_abi_evi &lt;- data.frame(\n  evi_landsat = evi_seq,\n  abi = pred_abi_evi,\n  ci_lower = ci_lower,\n  ci_upper = ci_upper\n)\n\n\n# labi_evi &lt;- abi_evi |&gt; \n#   group_by(sp_code) |&gt; \n#   group_modify(\n#     ~ broom::tidy(lm(abi ~ evi_landsat, data = .x))\n#   ) |&gt; \n#   filter(term != \"(Intercept)\") |&gt; \n#   mutate(p = case_when(\n#     p.value &lt; 0.001 ~ \"&lt;0.001\",\n#     p.value &gt;= 0.001 ~ as.character(round(p.value, 3))\n#   )) |&gt; \n#   mutate(sig = case_when(\n#     p.value &lt; 0.001 ~ \"sig\",\n#     p.value &gt;= 0.001 ~ \"no sig\"  \n#   )) \n\n\nlabi_evi &lt;- abi_evi |&gt; \n  group_by(sp_code) |&gt; \n  group_modify(~ {\n    # Ajusta el modelo\n    mod &lt;- lm(abi ~ evi_landsat, data = .x)\n    # Tidy con coeficientes\n    tidy_df &lt;- broom::tidy(mod)\n    # Añade R2 a cada fila\n    tidy_df$r.squared &lt;- broom::glance(mod)$r.squared\n    \n    tidy_df\n  }) |&gt; \n  mutate(p = case_when(\n    p.value &lt; 0.001 ~ \"&lt;0.001\",\n    p.value &gt;= 0.001 ~ as.character(round(p.value, 3))\n  )) |&gt; \n  mutate(sig = case_when(\n    p.value &lt; 0.001 ~ \"sig\",\n    p.value &gt;= 0.001 ~ \"no sig\"  \n  )) \n\n\ny_max_abi &lt;- 650\n\nlabi_evi_eq &lt;- labi_evi |&gt; \n  left_join(\n    labi_npp |&gt; filter(term == \"(Intercept)\") |&gt; \n      dplyr::select(sp_code, intercept = estimate)\n  ) |&gt; \n  mutate(\n    eq_text = if_else(\n      sig == \"sig\", \n      glue(\"y = {round(estimate, 2)}x {ifelse(intercept &lt; 0, '-', '+')} {round(abs(intercept), 2)}; R² = {round(r.squared, 2)}\"),\n      NA\n    )\n  ) |&gt; \n  filter(term != \"(Intercept)\") |&gt; \n  arrange(desc(sig)) |&gt; # ordenar por eq \n  rowid_to_column(\"id\") |&gt; \n  mutate(offset_y = id * 0.05 * y_max_abi, \n         y_max = y_max_abi - offset_y) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code))\n\n\nabi_evi &lt;- \n  abi_evi |&gt; inner_join(\n    labi_evi_eq |&gt; dplyr::select(sp_code, p, sig))\n\n## NPP vs EVI\nnpp_evi &lt;- df_index |&gt;\n  filter(y_variable %in% c(\"npp\", \"evi_landsat\")) |&gt;\n  dplyr::select(-se, -sd) |&gt;\n  pivot_wider(values_from = mean_y, names_from = y_variable) |&gt;\n  filter(!is.na(evi_landsat)) |&gt;\n  filter(!is.na(npp))\n\n\nboot_func_npp_evi &lt;- function(data, indices) {\n  # Take a bootstrap sample\n  sample_df &lt;- data[indices, ]\n  # Fit the non-linear model\n  nls_fit &lt;- nls(npp ~ Asym + (R0 - Asym) * exp(-exp(lrc) * evi_landsat),\n                 data = sample_df,\n                 start = list(Asym = 700, R0 = -6000, lrc = 2.8)\n  )\n  \n  # Generate predicted values for a sequence of npp\n  evi_seq &lt;- seq(min(data$evi_landsat), max(data$evi_landsat), length.out = 100)\n  pred &lt;- predict(nls_fit, newdata = data.frame(evi_landsat = evi_seq))\n  return(pred)\n}\n\n\n# Perform bootstrapping with 1000 resamples\nboot_res_npp_evi &lt;- boot(data = npp_evi, statistic = boot_func_npp_evi, R = 1000) # R is the number of resamples\n\n\n# Compute the 95% confidence intervals for each point\nci_lower &lt;- apply(boot_res_npp_evi$t, 2, quantile, probs = 0.025) # Lower 2.5%\nci_upper &lt;- apply(boot_res_npp_evi$t, 2, quantile, probs = 0.975) # Upper 97.5%\n\n# Predicted values from the original fit\nevi_seq &lt;- seq(min(abi_evi$evi_landsat), max(abi_evi$evi_landsat), length.out = 100)\npred_npp_evi &lt;- apply(boot_res_npp_evi$t, 2, mean) # Mean of the bootstrapped predictions\n\n# Create a data frame with predicted values and confidence intervals\npred_df_npp_evi &lt;- data.frame(\n  evi_landsat = evi_seq,\n  npp = pred_npp_evi,\n  ci_lower = ci_lower,\n  ci_upper = ci_upper\n)\n\nlnpp_evi &lt;- npp_evi |&gt; \n  group_by(sp_code) |&gt; \n  group_modify(~ {\n    # Ajusta el modelo\n    mod &lt;- lm(npp ~ evi_landsat, data = .x)\n    # Tidy con coeficientes\n    tidy_df &lt;- broom::tidy(mod)\n    # Añade R2 a cada fila\n    tidy_df$r.squared &lt;- broom::glance(mod)$r.squared\n    \n    tidy_df\n  }) |&gt; \n  mutate(p = case_when(\n    p.value &lt; 0.001 ~ \"&lt;0.001\",\n    p.value &gt;= 0.001 ~ as.character(round(p.value, 3))\n  )) |&gt; \n  mutate(sig = case_when(\n    p.value &lt; 0.001 ~ \"sig\",\n    p.value &gt;= 0.001 ~ \"no sig\"  \n  )) \n\ny_max_npp &lt;- 1050\n\nlnpp_evi_eq &lt;- lnpp_evi |&gt; \n  left_join(\n    lnpp_evi |&gt; filter(term == \"(Intercept)\") |&gt; \n      dplyr::select(sp_code, intercept = estimate)\n  ) |&gt; \n  mutate(\n    eq_text = if_else(\n      sig == \"sig\", \n      glue(\"y = {round(estimate, 2)}x {ifelse(intercept &lt; 0, '-', '+')} {round(abs(intercept), 2)}; R² = {round(r.squared, 2)}\"),\n      NA\n    )\n  ) |&gt; \n  filter(term != \"(Intercept)\") |&gt; \n  arrange(desc(sig)) |&gt; # ordenar por eq \n  rowid_to_column(\"id\") |&gt; \n  mutate(offset_y = id * 0.05 * y_max_npp, \n         y_max = offset_y) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code))\n\n  \n  \nnpp_evi &lt;- \n  npp_evi |&gt; inner_join(\n    lnpp_evi_eq |&gt; dplyr::select(sp_code, p, sig))\n\n\n\n## Plots \n# general_parameters\n\nalpha_points &lt;- 0.5\nmain_line_width &lt;- 1.3 \nmain_line_color &lt;- \"black\"\npartial_lines_width &lt;- .85 \nsize_points &lt;- 2\n\ncustom_options &lt;- list(\n  scale_shape_manual(\n    values = shape_elev, \n    name = \"Elevation\"), \n  scale_colour_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\"),\n  \n  scale_fill_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\"),\n  theme_bw(),\n  theme(\n    panel.grid = element_blank(), \n    axis.title = element_text(size = 14, face = \"bold\"), \n    axis.text = element_text(size = 13),\n    axis.ticks.length = unit(.2, \"cm\"),\n    legend.title=element_text(size=14, face = \"bold\"), \n    legend.text=element_text(size=14)\n  )\n)\n\nplot_abi_npp &lt;- abi_npp |&gt;\n  ggplot(aes(y = abi, x = npp)) +\n  geom_point(aes(shape = elev_code, fill = Specie, colour = Specie), alpha = alpha_points, size = size_points) +\n  geom_line(data = pred_df_abi_npp, aes(x = npp, y = abi), color = \"black\", linewidth = 1.5) + # Fitted model\n  # geom_line(data = pred_df_abi_npp, aes(x = npp, y = ci_lower), color = \"black\", linetype = \"dashed\") + \n  # geom_line(data = pred_df_abi_npp, aes(x = npp, y = ci_upper), color = \"black\", linetype = \"dashed\") + \n  geom_ribbon(data = pred_df_abi_npp, aes(x = npp, ymin = ci_lower, ymax = ci_upper), alpha = 0.3) + # CI\n  scale_y_continuous(limits = c(0, 450)) +\n  ylab(expression(ABI ~ (g ~ C ~ m^2 ~ year^{-1}))) +\n  xlab(expression(NPP[MODIS] ~ (g ~ C ~ m^2 ~ year^{-1}))) +\n  custom_options\n\nplot_abi_evi &lt;- abi_evi |&gt;\n  ggplot(aes(y = abi, x = evi_landsat)) +\n  geom_point(aes(shape = elev_code, fill = Specie, colour = Specie), alpha = alpha_points, size = size_points)  +\n  geom_line(data = pred_df_abi_evi, aes(x = evi_landsat, y = abi), color = \"black\", linewidth = 1.5) + # Fitted model\n  # geom_line(data = pred_df_abi_evi, aes(x = evi_landsat, y = ci_lower), color = \"black\", linetype = \"dashed\") + \n  # geom_line(data = pred_df_abi_evi, aes(x = evi_landsat, y = ci_upper), color = \"black\", linetype = \"dashed\") + \n  geom_ribbon(data = pred_df_abi_evi, aes(x = evi_landsat, ymin = ci_lower, ymax = ci_upper), alpha = 0.3) + # CI\n  ylab(expression(ABI ~ (g ~ C ~ m^2 ~ year^{-1}))) +\n  xlab(expression(EVI[Landsat])) +\n  custom_options\n\n\nplot_npp_evi &lt;- npp_evi |&gt;\n  ggplot(aes(y = npp, x = evi_landsat)) +\n  geom_point(aes(shape = elev_code, fill = Specie, colour = Specie), alpha = alpha_points, size = size_points) +\n  geom_line(data = pred_df_npp_evi, aes(x = evi_landsat, y = npp), color = \"black\", linewidth = 1.5) + # Fitted model\n  # geom_line(data = pred_df_npp_evi, aes(x = evi_landsat, y = ci_lower), color = \"black\", linetype = \"dashed\") + \n  # geom_line(data = pred_df_npp_evi, aes(x = evi_landsat, y = ci_upper), color = \"black\", linetype = \"dashed\") +\n  geom_ribbon(data = pred_df_npp_evi, aes(x = evi_landsat, ymin = ci_lower, ymax = ci_upper), alpha = 0.3) + # CI\n  ylab(expression(NPP[MODIS] ~ (g ~ C ~ m^2 ~ year^{-1}))) +\n  xlab(expression(EVI[Landsat])) +\n  custom_options\n\n\n### By species\np_sp &lt;- ( \n  (plot_abi_npp +  \n     geom_smooth(aes(linetype = sig, group = Specie, colour = Specie), \n                 linewidth = partial_lines_width, method = \"lm\", se = FALSE) + \n     scale_linetype_manual(values = lines_lm, guide = \"none\") +\n     scale_x_continuous(\n       limits = c(150,1050), \n       breaks = c(150,300,450,600,750,900,1050)) +\n  annotate(geom = \"text\", label = \"a\", x = 150, y = Inf, hjust = .2, vjust = 1.5, size = 7, fontface = \"bold\") +\n  geom_text(data = labi_npp_eq |&gt; filter(!is.na(eq_text)), \n            aes(x = 600, y = y_max, label = eq_text, colour = Specie), \n            hjust = 1.1, vjust = 1.1, size = 2.75,\n            fontface = \"bold\", show.legend = FALSE)) +\n  (plot_abi_evi + \n     geom_smooth(aes(linetype = sig, group = Specie, colour = Specie), \n                 linewidth = partial_lines_width, method = \"lm\", se = FALSE) +\n     scale_linetype_manual(values = lines_lm, guide = \"none\")+\n     scale_x_continuous(\n       limits = c(0.1,0.5), \n       breaks = c(0.1, 0.2, 0.3, 0.4, 0.5)) +\n     annotate(geom = \"text\", label = \"b\", x = .1, y = Inf, hjust = .2, vjust = 1.5, size = 7, fontface = \"bold\") +\n  geom_text(data = labi_evi_eq |&gt; filter(!is.na(eq_text)), \n            aes(x = Inf, y = y_max, label = eq_text, colour = Specie), \n            hjust = 1.1, vjust = 1.1, size = 2.75,\n            fontface = \"bold\", show.legend = FALSE)) +\n  (plot_npp_evi + \n     geom_smooth(aes(linetype = sig, group = Specie, colour = Specie), \n                 linewidth = partial_lines_width, method = \"lm\", se = FALSE) +\n     scale_linetype_manual(values = lines_lm, guide = \"none\") +\n     scale_x_continuous(\n       limits = c(0.1,0.5), \n       breaks = c(0.1, 0.2, 0.3, 0.4, 0.5)) + \n     scale_y_continuous(\n       limits = c(0,1050), \n       breaks = c(0,150,300,450,600,750,900,1050)) +\n     annotate(geom = \"text\", label = \"c\", x = .1, y = Inf, hjust = .2, vjust = 1.5, size = 7, fontface = \"bold\") +\n  geom_text(data = lnpp_evi_eq |&gt; filter(!is.na(eq_text)), \n            aes(x = 0.5, y = y_max, label = eq_text, colour = Specie), \n            hjust = 1.1, vjust = 1.1, size = 2.75,\n            fontface = \"bold\", show.legend = FALSE)) \n  ) & theme(legend.position = \"bottom\", legend.text = element_text(size = 14))\n\ncompare_plot_sp &lt;- p_sp + plot_layout(guides = \"collect\") & guides(\n  shape = guide_legend(override.aes = list(stroke = .5, size = 3, colour = \"black\")),\n  fill = guide_legend(override.aes = list(size = 3))) & theme(legend.box = \"vertical\")\n\ncompare_plot_sp\n\n\n\n\n\nRelationships between Aboveground Biomass Increment (ABI) with: (a) annual Net Primary Productivity (NPP) (2001-2022); (b) annual Enhanced Vegetation Index (EVI) (1986-2022); and (c) between annual Net Primary Productivity (NPP) and annual Enhanced Vegetation Index (EVI) (2001-2022). The global trends for all pine species are depicted by a black line (gray shaded indicated bootstrap confidence intervals), while color-coded lines indicate relations for individual pine species (solid line: significant (p&lt;0.001), dashed line: not significant)."
  },
  {
    "objectID": "analysis/figure_main_model.html",
    "href": "analysis/figure_main_model.html",
    "title": "Model Ratio ABI:NPP selected",
    "section": "",
    "text": "This figure corresponds to figure 3 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggnewscale)\nlibrary(patchwork)\nlibrary(broom)\nlibrary(metR) \nlibrary(sf)\nsource(\"../scripts/aux.R\")\n\n\n\n# Read data\nannual_pet &lt;- read_csv(\"../data/spei_climate.csv\")  |&gt; \n  dplyr::select(sp_elev, year, monthly_pet, monthly_tmed, monthly_prec) |&gt; \n  group_by(sp_elev, year) |&gt;\n  summarise(pet = sum(monthly_pet), \n            prec = sum(monthly_prec),\n            tmed = mean(monthly_tmed, na.rm = TRUE)) |&gt; \n  rowwise() |&gt; \n  mutate(water_balance = prec - pet)\n\nratio &lt;- read_csv(\"../data/ratio_abinpp.csv\") |&gt; \n  dplyr::select(year, sp_code, elev_code, sp_elev, ratio_abi_npp = ratio) \n\ndf &lt;- ratio |&gt; \n  inner_join(annual_pet) |&gt; \n  pivot_longer(pet:water_balance, values_to = \"mean_climate\", \n               names_to = \"climate_variable\")\n\nd &lt;- df |&gt; filter(climate_variable %in% c(\"tmed\", \"prec\")) |&gt; \n  pivot_wider(values_from = mean_climate, names_from = climate_variable) |&gt; \n  dplyr::rename(rat = ratio_abi_npp) |&gt; \n  mutate(species = paste0(\"P. \", sp_code)) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\", \"low\", \"medium\", \"high\")) |&gt;\n  mutate(sp_code = fct_relevel(sp_code, \"halepensis\",\"pinaster\", \"nigra\", \"sylvestris\")) |&gt; \n  mutate(species = fct_relevel(species, \"P. halepensis\",\"P. pinaster\", \"P. nigra\", \"P. sylvestris\")) \n\n\n# Read data from modelling # see modelling ratio selected.rmd\nteffect &lt;- read_csv(\"../data/final_model_teffect.csv\")\npeffect &lt;- read_csv(\"../data/final_model_peffect.csv\")\npred_mcombrat7 &lt;- read_csv(\"../data/final_model_pred_mcombrat7.csv\")\nsummary_models &lt;- read_csv(\"../data/final_model_results.csv\")\n\n\n#### Lineal models \n# For lineal models, response variable \nlm_temp &lt;- d |&gt; \n  group_by(sp_code) |&gt;\n  group_modify(\n    ~ broom::tidy(lm(rat ~ tmed, data = .x))\n  ) |&gt; \n  filter(term != \"(Intercept)\") |&gt; \n  mutate(p = case_when(\n    p.value &lt; 0.001 ~ \"&lt;0.001\",\n    p.value &gt;= 0.001 ~ as.character(round(p.value, 3))\n  )) |&gt; \n  mutate(sig = case_when(\n    p.value &lt; 0.001 ~ \"sig\",\n    p.value &gt;= 0.001 ~ \"no sig\"  \n  )) \n\n\nlm_prec &lt;- d |&gt; \n  group_by(sp_code) |&gt;\n  group_modify(\n    ~ broom::tidy(lm(rat ~ prec, data = .x))\n  ) |&gt; \n  filter(term != \"(Intercept)\") |&gt; \n  mutate(p = case_when(\n    p.value &lt; 0.001 ~ \"&lt;0.001\",\n    p.value &gt;= 0.001 ~ as.character(round(p.value, 3))\n  )) |&gt; \n  mutate(sig = case_when(\n    p.value &lt; 0.001 ~ \"sig\",\n    p.value &gt;= 0.001 ~ \"no sig\"  \n  )) \n\n\n\n# Plots parameters \nline_colour_model &lt;- \"black\"\nalpha_points &lt;- 0.35 \nsize_points &lt;- 2.5\n\nlabel_npp &lt;- \"Annual~NPP[MODIS]~(g~C~m^2~year^{-1})\"\nlabel_ratio &lt;- \"ABI:NPP\"\nlabel_prec &lt;- \"Precipitation (mm)\"\nlabel_tmed &lt;- \"Annual Mean Temperature (ºC)\"\nlabel_wb &lt;- \"Water Balance (mm)\"\n\n\ncustom_options &lt;- list(\n  scale_shape_manual(\n    values = shape_elev, \n    name = \"Elevation\"), \n  scale_colour_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\"),\n  scale_fill_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\"),\n  theme_bw(),\n  theme(\n    panel.grid = element_blank(), \n    axis.title = element_text(size = 15, face = \"bold\"), \n    axis.text = element_text(size = 12),\n    axis.ticks.length = unit(.2, \"cm\"),\n    legend.title=element_text(size=15, face = \"bold\"), \n    legend.text=element_text(size=15)\n  )\n)\n\n\n\nplot_t &lt;- teffect |&gt;\n  filter(type_value == \"predicted\") |&gt; \n  filter(modelo == \"mtrat6\") |&gt; \n  ggplot(\n    aes(x = tmed, y = value)) + \n  # lineal \n  geom_smooth(data = (d |&gt; inner_join(lm_temp |&gt; dplyr::select(sp_code, p, sig))),\n              aes(x = tmed, y = rat, fill = species, colour = species, linetype = sig),\n              linewidth = 1, method = \"lm\", se = FALSE) +\n  scale_linetype_manual(values = lines_lm, guide = \"none\") + \n  geom_line(\n    linetype = \"dashed\",\n    colour = line_colour_model) + \n  geom_point(data = d, \n             aes(x = tmed, y = rat, shape = elev_code, fill = species, colour = species), \n             alpha = alpha_points, size = size_points) +\n  geom_line(\n    data = (teffect |&gt;\n              filter(type_value == \"predicted\") |&gt; \n              filter(modelo == \"mtrat6\") |&gt; \n              filter(tmed &gt; min(d$tmed)) |&gt; \n              filter(tmed &lt; max(d$tmed))),\n    colour = line_colour_model, \n    linewidth = 2.1) +\n  scale_y_continuous(limits = c(0,0.63), expand = expansion(add = c(0.005, 0.005))) + \n  scale_x_continuous(limits = c(7.5,17.8), \n                     expand = expansion(add = c(0.1, 0.1)),\n                     breaks = seq(7.5, 17.5, 2.5)) + \n  xlab(label_tmed) +\n  ylab(label_ratio) +\n  custom_options + \n  annotate(geom=\"text\", \n           x=15, y=.6, \n           label= sprintf(\"R^2 == %.3g\",round(summary_models |&gt; filter(modelo == \"mtrat6\") |&gt; dplyr::select(R2), 3)), \n           color=\"black\",\n           parse = TRUE, \n           size = 6)\n\n\nplot_p &lt;- peffect |&gt; \n  filter(type_value == \"predicted\") |&gt; \n  ggplot(\n    aes(x = prec, y = value)) + \n  geom_smooth(data = (d |&gt; inner_join(lm_prec |&gt; dplyr::select(sp_code, p, sig))),\n              aes(x = prec, y = rat, fill = species, colour = species, linetype = sig),\n              linewidth = 1, method = \"lm\", se = FALSE) +\n  scale_linetype_manual(values = lines_lm, guide = \"none\") + \n  \n  geom_line(\n    linetype = \"dashed\",\n    colour = line_colour_model) + \n  geom_point(data = d, \n             aes(x = prec, \n                 y = rat, \n                 shape = elev_code, fill = species, colour = species), \n             alpha = alpha_points, size = size_points) +\n  geom_line(\n    data = (peffect |&gt;\n              filter(type_value == \"predicted\") |&gt; \n              filter(prec &gt; min(d$prec)) |&gt; \n              filter(prec &lt; max(d$prec))), \n    colour = line_colour_model, \n    linewidth = 2.1) + \n  scale_y_continuous(limits = c(0,0.63), expand = expansion(add = c(0.005, 0.005)), position = \"right\") + \n  scale_x_continuous(limits = c(50, 1550), \n                     breaks = c(100, 300, 500, 700, 900, 1100, 1300, 1500)) + \n  xlab(label_prec) + \n  ylab(\"\") + \n  custom_options +\n  annotate(geom=\"text\", \n           x=1050, y=.6, \n           label = sprintf(\"R^2 == %.3g\",round(summary_models |&gt; filter(modelo == \"mprecrat3\") |&gt; dplyr::select(R2), 3)), \n           color=\"black\",\n           parse = TRUE, \n           size = 6) \n\n\n\n\n# Surface plot\nbreaks &lt;- seq(0, .8, by=0.05)\n\n# Generate clip \nx &lt;- d[chull(d$tmed, d$prec), c(\"rat\",\"prec\",\"tmed\")] |&gt; \n  add_row(rat = 0.075, prec = 800, tmed = 12.5) |&gt; \n  mutate(prec = ifelse(prec &lt; 150, prec - 30, \n                       ifelse(prec &gt; 1300, prec + 30, prec)))\n\nbb &lt;- st_as_sf(x = x, \n               coords = c(\"prec\",\"tmed\"), remove = FALSE) |&gt; \n  rename(ratio_pred = rat) |&gt; \n  st_combine() |&gt;   \n  st_cast(\"POLYGON\") |&gt; \n  st_buffer(dist = 1)\n\n\nplot_with_ABI_legend &lt;- pred_mcombrat7 |&gt; \n  ggplot(aes(x = prec, y = tmed)) +\n  # Surface \n  metR::geom_contour_fill(aes(z = ratio_pred, fill = after_stat(level)), \n                          binwidth = 0.1,\n                          show.legend = TRUE,  \n                          breaks = breaks, \n                          colour = \"white\", clip = bb) + \n  # Colour scale surface\n  scale_fill_discretised(name = label_ratio, \n                         low = \"#f7f7f7\", high = \"#404040\", \n                         guide = guide_legend(\n                           override.aes = list(shape = NA), \n                           theme = theme(\n                             legend.title = element_text(size = 11, face = \"bold\"),\n                             legend.text = element_text(size = 9)), ncol = 2 \n                         )) + \n  theme_bw() +\n  theme(\n    panel.grid = element_blank(), \n    axis.title = element_text(size = 14, face = \"bold\"), \n    axis.text = element_text(size = 12),\n    axis.ticks.length = unit(.2, \"cm\"),\n    legend.position = c(0.75, 0.78)  \n  ) + \n  # Add new scales \n  ggnewscale::new_scale_color() + \n  ggnewscale::new_scale_fill() + \n  geom_point(\n    data = d, aes(shape = elev_code, colour = species, fill = species),  \n    size = 1.7, alpha = .8, show.legend = FALSE) +  \n  scale_shape_manual(\n    values = shape_elev, name = \"Elevation\", \n    guide = \"none\") +  \n  scale_colour_manual(\n    values = colours_Specie, name = \"Species\", \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    guide = \"none\") +  \n  scale_fill_manual(\n    values = colours_Specie,  name = \"Species\", \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    guide = \"none\") +\n  metR::geom_label_contour(aes(z = ratio_pred),\n                           colour = \"black\", \n                           breaks = breaks, \n                           label.placer = label_placer_n(n = 1)) +\n  \n  xlab(label_prec) +  ylab(label_tmed) + \n  scale_y_continuous(\n    limits = c(7.5, 17.5), \n    breaks = c(7.5, 10, 12.5, 15, 17.5),\n    expand = expansion(add = c(0.1, 0.01))\n  ) + \n  scale_x_continuous(\n    limits = c(50, 1510), \n    breaks = c(100, 300, 500, 700, 900, 1100, 1300, 1500),\n    expand = expansion(add = c(1, 1))\n  )\n\n\nmain_figure2 &lt;- (\n  (plot_t + theme(plot.margin = unit(c(0.5, 0, 0, .5), \"cm\")) + \n     plot_p + theme(plot.margin = unit(c(0.5, .5, 0, 0), \"cm\")) & theme(\n       legend.position = \"bottom\",\n       legend.box = \"vertical\",\n       legend.box.just = \"left\"\n     )) + plot_layout(guides = \"collect\")\n  + (plot_with_ABI_legend + plot_layout(guides = \"keep\"))) +\n  plot_annotation(tag_levels = \"a\") & theme(\n    plot.tag = element_text(size = 20, face = \"bold\"))\n\nmain_figure2 \n\n\n\n\n\nRelationships between ABI:NPP ratio and annual mean temperature (a) and precipitation (b). Nonlinear relationship between ABI:NPP ratio and climatic variables were shown by black solid lines (dashed black lines representing the relationships for unobserved climatic data). Color-coded lines indicate relations for individual pine species (solid line: significant (p&lt;0.001), dashed line: not significant). (c) Response surface of the ABI:NPP ratio as a function of annual mean temperature and precipitation."
  },
  {
    "objectID": "analysis/figure_evi_npp_abi_climate.html",
    "href": "analysis/figure_evi_npp_abi_climate.html",
    "title": "Relationships between EVI, NPP and ABI with climate variables",
    "section": "",
    "text": "This figure corresponds to figure 2 in the manuscript.\nAn high-resolution version of this figure is available here.\n\n\n\nCode\n# pkgs \nlibrary(tidyverse)\nlibrary(ggh4x)\nlibrary(patchwork)\nlibrary(here)\nlibrary(glue)\nlibrary(broom)\nsource(here::here(\"scripts/aux.R\"))\n\n\n# Read data\n## ABI\nabi &lt;- read_csv(here::here(\"data/abi.csv\")) |&gt; \n  mutate(se = NA, sd = NA, variable = \"abi\") |&gt; \n  rename(mean = abi)\n\n## annual pet\nannual_pet &lt;- read_csv(here::here(\"data/spei_climate.csv\")) |&gt; \n  dplyr::select(sp_elev, year, monthly_pet, monthly_tmed, monthly_prec) |&gt; \n  group_by(sp_elev, year) |&gt;\n  summarise(pet = sum(monthly_pet), \n            prec = sum(monthly_prec),\n            tmed = mean(monthly_tmed, na.rm = TRUE)) |&gt; \n  rowwise() |&gt; \n  mutate(water_balance = prec - pet)\n\n\n## EVI Landsat \nevi_landsat &lt;- read_csv(here::here(\"data/iv_landsat.csv\")) |&gt;\n  filter(iv == \"evi\") |&gt;\n  dplyr::select(year, sp_code, elev_code, sp_elev, mean, sd, se) |&gt;\n  mutate(variable = \"evi_landsat\")\n\n## NPP MODIS\nnpp &lt;- read_csv(here::here(\"data/npp_modis.csv\")) |&gt;\n  rename(mean = npp) |&gt;\n  mutate(se = NA, sd = NA, variable = \"npp\") |&gt;\n  dplyr::select(year, sp_code, elev_code, sp_elev, mean, sd, se, variable)\n\n\ndf_index &lt;- bind_rows(\n  abi, evi_landsat, npp) |&gt; \n  mutate(elev_code = fct_relevel(elev_code, \"low-Dec\",\"low\", \"medium\", \"high\")) |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code)) |&gt; \n  rename(mean_y = mean, y_variable = variable)\n\ndf &lt;- df_index |&gt; \n  inner_join(annual_pet) |&gt; \n  pivot_longer(pet:water_balance, values_to = \"mean_climate\", \n               names_to = \"climate_variable\")\n\ndf_plot &lt;- df |&gt; \n  filter(year &gt; 1986) |&gt; \n  mutate(y_variable2 = case_when(\n    y_variable == \"abi\" ~ \"ABI~(g~C~m^2~year^{-1})\",\n    y_variable == \"evi_landsat\" ~ \"EVI[Landsat]\",\n    y_variable == \"npp\" ~\"NPP[MODIS]~(g~C~m^2~year^{-1})\")) |&gt; \n  mutate(y_variable2 = fct_relevel(y_variable2, \n                                   \"EVI[Landsat]\", \n                                   \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n                                   \"ABI~(g~C~m^2~year^{-1})\"))\n\n\n\n\n# Generate tibble with y max values. Caution, check there are equal to ylimits specified below for plot\nymax_panel &lt;- tibble(\n   y_variable = c(\"evi_landsat\", \"npp\", \"abi\"),\n   y_max = c(0.5, 1250, 700))\n\n# Generate another tibble with linear regression\nlr &lt;- df_plot |&gt; \n  filter(climate_variable != \"pet\") |&gt; \n  group_by(y_variable, climate_variable, sp_code) |&gt; \n  group_modify(~ {\n    # Ajusta el modelo\n    mod &lt;- lm(mean_y ~ mean_climate, data = .x)\n    \n    # Tidy con coeficientes\n    tidy_df &lt;- broom::tidy(mod)\n    \n    # Añade R2 a cada fila\n    tidy_df$r.squared &lt;- broom::glance(mod)$r.squared\n    \n    tidy_df\n  }) |&gt;\n  mutate(p = case_when(\n    p.value &lt; 0.001 ~ \"&lt;0.001\",\n    p.value &gt;= 0.001 ~ as.character(round(p.value, 3))\n  )) |&gt; \n  mutate(sig = case_when(\n    p.value &lt; 0.001 ~ \"sig\",\n    p.value &gt;= 0.001 ~ \"no sig\"\n  ))\n\n# Generate equations \nl &lt;- lr |&gt; \n  left_join(\n    lr |&gt; filter(term == \"(Intercept)\") |&gt; \n      select(y_variable, climate_variable, sp_code, intercept = estimate), \n    by = c(\"y_variable\", \"climate_variable\", \"sp_code\")\n  ) |&gt; \n  mutate(\n    eq_text = if_else(\n      sig == \"sig\" & term == \"mean_climate\",\n      glue(\"y = {round(estimate, 2)}x {ifelse(intercept &lt; 0, '-', '+')} {round(abs(intercept), 2)}; R² = {round(r.squared, 2)}\"),\n     NA\n    )\n  ) |&gt; \n  filter(term != \"(Intercept)\") |&gt; \n  mutate(Specie = paste0(\"P. \", sp_code)) |&gt; \n  mutate(y_variable2 = case_when(\n    y_variable == \"evi_landsat\" ~ \"EVI[Landsat]\",\n    y_variable == \"npp\" ~ \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n    y_variable == \"abi\" ~ \"ABI~(g~C~m^2~year^{-1})\"\n  )) \n\n# Filter equations \nl_eq &lt;- l |&gt; filter(!is.na(eq_text)) |&gt; \n  left_join(ymax_panel, by = \"y_variable\") |&gt; \n  group_by(y_variable, climate_variable) |&gt; \n  mutate(\n    offset_y = row_number() * 0.05 * y_max,  # Ajusta el offset según sea necesario\n    y = y_max - offset_y\n  ) |&gt; \n  ungroup()\n\n\n\n\n\ndf_plot &lt;- \n  df_plot |&gt; left_join(\n    l |&gt; dplyr::select(y_variable, climate_variable, sp_code, p, sig)) |&gt; \n  mutate(sp_code = fct_relevel(sp_code, \"halepensis\",\"pinaster\", \"nigra\", \"sylvestris\")) |&gt; \n  mutate(Specie = fct_relevel(Specie, \"P. halepensis\",\"P. pinaster\", \"P. nigra\", \"P. sylvestris\"))\n\n\n# Plot \n## general_parameters\n\nalpha_points &lt;- 0.3\nmain_line_width &lt;- 1\nmain_line_color &lt;- \"black\"\npartial_lines_width &lt;- 1.1\nsize_points &lt;- 1.7\nstroke_points &lt;- 0.1 \n\nlabel_landsat &lt;- \"EVI[Landsat]\"\nlabel_npp &lt;- \"NPP[MODIS]~(g~C~m^2~year^{-1})\"\nlabel_abi &lt;- \"ABI~(g~C~m^2~year^{-1})\"\nlabel_wb &lt;- \"P-PET (mm)\"\nlabel_prec &lt;- \"Precipitation (mm)\"\n\ny_scales &lt;- list(\n  scale_y_continuous(limits = c(0, 0.5)),\n  scale_y_continuous(limits = c(0,1250)),\n  scale_y_continuous(limits = c(0, 700))\n)\n\n## Custom themes \ncustom_scales &lt;- list(\n  scale_colour_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\"),\n  scale_fill_manual(\n    values = colours_Specie, \n    labels = expression(italic(\"P. halepensis\"), italic(\"P. pinaster\"), italic(\"P. nigra\"), italic(\"P. sylvestris\")),\n    name = \"Species\"),\n  scale_shape_manual(values = shape_elev, name = \"Elevation\")\n)\n\nbase_theme &lt;- list(\n  theme_bw(),\n  theme(text = element_text(family = \"Helvetica\"),\n        axis.title.x = element_text(face = \"bold\", size = 12),\n        strip.text = element_text(face = \"bold\", size = 12),\n        axis.text = element_text(size = 10),\n        legend.text = element_text(size = 8))\n) \n\ncustom_theme_figure &lt;- list(\n  theme(\n    panel.grid = element_blank(), \n    strip.background = element_blank(),\n    strip.placement = \"outside\",\n    strip.text.y = element_text(vjust = 0)\n  )\n) \n\n\n## Letters for label \nletras &lt;- data.frame(\n  tipo = rep(c(\"prec\", \"temp\", \"wb\"), each = 3),  \n  y_variable2 = rep(\n    c(\"EVI[Landsat]\", \"NPP[MODIS]~(g~C~m^2~year^{-1})\", \"ABI~(g~C~m^2~year^{-1})\"),\n    times = 3\n  ),\n  label = c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"f\", \"g\", \"h\"),  \n  x = -Inf,  \n  y = Inf    \n)\n\n\n# ----------\n\nplot_prec &lt;- \n  df_plot|&gt; \n  filter(climate_variable == \"prec\") |&gt; \n  ggplot(aes(x=mean_climate, y = mean_y, colour = Specie)) + \n  geom_point(aes(shape = elev_code, fill = Specie), \n             alpha = alpha_points, size = size_points, stroke = stroke_points) + \n  geom_smooth(aes(linetype = sig), linewidth = partial_lines_width, method = \"lm\", se = FALSE) +\n  scale_linetype_manual(values = lines_lm, guide = \"none\") + \n  geom_smooth(aes(), \n              method = \"nls\", \n              formula=y~SSlogis(x, Asym, xmid, scal),\n              se =  FALSE, # this is important \n              linewidth = main_line_width, colour = main_line_color) +\n  ylab(\"\") + \n  xlab(\"Precipitation (mm)\") +\n  custom_scales + \n  base_theme + \n  custom_theme_figure + \n  theme(\n    legend.position = \"top\"\n    # legend.box = \"vertical\"\n  ) + \n  scale_x_continuous(limits = c(0, 1750)) +\n  facet_wrap(~factor(y_variable2, c(\"EVI[Landsat]\", \n                                    \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n                                    \"ABI~(g~C~m^2~year^{-1})\")),\n             scales = \"free_y\", \n             labeller = label_parsed, \n             strip.position = \"left\") +\n  ggh4x::facetted_pos_scales(y = y_scales) +\n  geom_text(data = (letras |&gt; filter(tipo == \"prec\")), \n            aes(x = x, y = y, label = label),\n            vjust = 1.2, hjust = -1.2, size = 5, \n            fontface = \"bold\", inherit.aes = FALSE) +\n  geom_text(data = l_eq |&gt; filter(climate_variable == \"prec\"), \n            aes(x = Inf, y = y, label = eq_text), \n            hjust = 1.1, vjust = 1.1, size = 2.75,\n            fontface = \"bold\", show.legend = FALSE) +\n  guides(\n    colour = guide_legend(override.aes = list(size = 4)), \n    shape = guide_legend(override.aes = list(size = 4)), \n  )\n\n\n\n\n# Add NLS for EVI and Temperature (not converge with nls general)\n\ndf_plot_tmed_evi &lt;- df_plot |&gt; filter(y_variable == \"evi_landsat\", climate_variable == \"tmed\")\nnls_fit &lt;- nls(mean_y ~ a * exp(-b * mean_climate) + c, \n               start = list(\n                 a = max(df_plot_tmed_evi$mean_y) - min(df_plot_tmed_evi$mean_y),  \n                 b = 0.1,  \n                 c = min(df_plot_tmed_evi$mean_y)  \n               ),\n               data = df_plot_tmed_evi,\n               control = nls.control(maxiter = 10000, tol = 1e-5, minFactor = 1e-7))\n\ndf_pred_tmed_evi &lt;- data.frame(\n  mean_climate =\n    seq(min(df_plot_tmed_evi$mean_climate), max(df_plot_tmed_evi$mean_climate),\n      length.out = 100\n    )\n) |&gt;\n  mutate(y_variable = \"evi_landsat\", climate_variable = \"tmed\") |&gt; \n  mutate(y_variable2 = \"EVI[Landsat]\")\n\ndf_pred_tmed_evi$mean_y &lt;- predict(nls_fit, newdata = df_pred_tmed_evi) \n\n\ndf_pred_tmed_evi &lt;- df_pred_tmed_evi |&gt; \n  bind_rows(\n    data.frame(\n      mean_climate = c(NA,NA),\n      mean_y = c(NA,NA),\n      y_variable = c(\"abi\", \"npp\"),\n      y_variable2 = \n        c(\"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n          \"ABI~(g~C~m^2~year^{-1})\"), \n      climate_variable = c(\"tmed\", \"tmed\")\n    )\n  )\n  \n\nplot_tmed &lt;- \n  df_plot |&gt; \n  filter(climate_variable == \"tmed\") |&gt; \n  ggplot(aes(x=mean_climate, y = mean_y, colour = Specie)) + \n  geom_point(aes(shape = elev_code, fill = Specie), \n             alpha = alpha_points, size = size_points, stroke = stroke_points) +\n  geom_smooth(aes(linetype = sig), linewidth = partial_lines_width, method = \"lm\", se = FALSE) +\n  scale_linetype_manual(values = lines_lm, guide = \"none\") +\n  geom_smooth(\n    data = df_plot |&gt; filter(y_variable != \"evi_landsat\"),\n    aes(),\n              method = \"nls\", \n              formula = y ~ SSlogis(x, Asym, xmid, scal),\n              se =  FALSE, # this is important \n              linewidth = main_line_width, colour = main_line_color) +\n  ylab(\"\") + \n  xlab(\"Annual Mean Temperature (ºC)\") +\n  custom_scales + \n  base_theme + \n  custom_theme_figure + \n  theme(\n    legend.position = \"none\", \n  ) + \n  scale_x_continuous(limits = c(8, 16)) +\n  facet_wrap(~factor(y_variable2, c(\"EVI[Landsat]\", \n                                    \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n                                    \"ABI~(g~C~m^2~year^{-1})\")),\n             scales = \"free_y\", \n             labeller = label_parsed, \n             strip.position = \"left\") +\n  facetted_pos_scales(y = y_scales) +\n  geom_text(data = (letras |&gt; filter(tipo == \"temp\")), \n            aes(x = x, y = y, label = label),\n            vjust = 1.2, hjust = -1.2, size = 5, \n            fontface = \"bold\", inherit.aes = FALSE) +\n  geom_text(data = l_eq |&gt; filter(climate_variable == \"tmed\"),\n            aes(x = Inf, y = y, label = eq_text, colour = Specie), \n            hjust = 1.1, vjust = 1.1, size = 2.75, inherit.aes = FALSE,\n            fontface = \"bold\", show.legend = FALSE) + \n  geom_line(data = df_pred_tmed_evi,\n            aes(x = mean_climate, y = mean_y), \n            linewidth = main_line_width, \n            colour = main_line_color)\n\nplot_wb &lt;- \n  df_plot|&gt; \n  filter(climate_variable == \"water_balance\") |&gt; \n  ggplot(aes(x=mean_climate, y = mean_y, colour = Specie)) + \n  geom_point(aes(shape = elev_code, fill = Specie), alpha = alpha_points, size = size_points, stroke = stroke_points) +\n  geom_smooth(aes(linetype = sig), linewidth = partial_lines_width, method = \"lm\", se = FALSE) +\n  scale_linetype_manual(values = lines_lm, guide = \"none\") +\n  geom_smooth(aes(), \n              method = \"nls\", \n              formula=y~SSlogis(x, Asym, xmid, scal),\n              se =  FALSE, # this is important \n              linewidth = main_line_width, colour = main_line_color) + \n  ylab(\"\") + \n  xlab(\"Water balance (mm)\") +\n  custom_scales + \n  base_theme + \n  custom_theme_figure + \n  theme(\n    legend.position = \"none\", \n  ) + \n  scale_x_continuous(limits = c(-900, 1200)) +\n  facet_wrap(~factor(y_variable2, c(\"EVI[Landsat]\", \n                                    \"NPP[MODIS]~(g~C~m^2~year^{-1})\",\n                                    \"ABI~(g~C~m^2~year^{-1})\")),\n             scales = \"free_y\", \n             labeller = label_parsed, \n             strip.position = \"left\") +\n  facetted_pos_scales(y = y_scales) +\n  geom_text(data = (letras |&gt; filter(tipo == \"wb\")), \n            aes(x = x, y = y, label = label),\n            vjust = 1.2, hjust = -1.2, size = 5, \n            fontface = \"bold\", inherit.aes = FALSE) +\n  geom_text(data = l_eq |&gt; filter(climate_variable == \"water_balance\"),\n            aes(x = Inf, y = y, label = eq_text, colour = Specie), \n            hjust = 1.1, vjust = 1.1, size = 2.75, inherit.aes = FALSE,\n            fontface = \"bold\", show.legend = FALSE) \n\nwb_prec_tmed &lt;- plot_prec / plot_tmed /plot_wb  &\n  guides(\n    fill = guide_legend(order = 1, override.aes = list(size = 3)),\n    colour = guide_legend(order = 1),\n    shape = guide_legend(override.aes = list(stroke = .5, size = 3, colour = \"black\")), \n  )\n\nwb_prec_tmed \n\n\n\n\n\nRelationships between annual Enhanced Vegetation Index (EVI) (1986-2022), annual Net Primary Productivity (NPP) (2001-2022), and Aboveground Biomass Increment (ABI) (1986-2022) with precipitation (a-c), annual mean temperature (d-f), and annual water balance (f-h). The global trends for all pine species are depicted by a black line (nonlinear least squares), while color-coded lines indicate relations for individual pine species (solid line: significant (p&lt; 0.001), dashed line: not significant)."
  },
  {
    "objectID": "rpkg.html",
    "href": "rpkg.html",
    "title": "R packages used",
    "section": "",
    "text": "For all analysis and figures we used the following R packages:\n\n\nCode\nlibrary(grateful)\ncite_packages(output = \"paragraph\", out.dir = \".\")\n\n\nWe used R version 4.4.2 (R Core Team 2024a) and the following R packages: boot v. 1.3.31 (A. C. Davison and D. V. Hinkley 1997; Angelo Canty and B. D. Ripley 2024), data.table v. 1.17.2 (Barrett et al. 2025), emmeans v. 1.11.1 (Lenth 2025), fields v. 16.3.1 (Douglas Nychka et al. 2021), flexdashboard v. 0.6.2 (Aden-Buie et al. 2023), geomtextpath v. 0.1.5 (Cameron and van den Brand 2025), ggh4x v. 0.3.0 (van den Brand 2024), ggimage v. 0.3.3 (Yu 2023), ggnewscale v. 0.5.1 (Campitelli 2025), ggsci v. 3.2.0 (Xiao 2024), ggtern v. 3.5.0 (Hamilton and Ferry 2018), glue v. 1.8.0 (Hester and Bryan 2024), gridExtra v. 2.3 (Auguie 2017), here v. 1.0.1 (Müller 2020), kableExtra v. 1.4.0 (Zhu 2024), Kendall v. 2.2.1 (McLeod 2022), leafgl v. 0.2.2 (Appelhans 2024), leaflet v. 2.2.2 (Cheng et al. 2024), leaflet.extras2 v. 1.3.1 (Sebastian 2025), lemon v. 0.5.0 (Edwards 2024), likelihood v. 1.9 (Murphy 2023), likelihoodTools v. 1.0.0 (Pérez-Luque 2025), MASS v. 7.3.65 (Venables and Ripley 2002), metR v. 0.18.0 (Campitelli 2021), multcomp v. 1.4.28 (Hothorn, Bretz, and Westfall 2008), multcompView v. 0.1.10 (Graves, Piepho, and Sundar Dorai-Raj 2024), patchwork v. 1.3.0 (Pedersen 2024), raster v. 3.6.32 (Hijmans 2025), rmarkdown v. 2.29 (Xie, Allaire, and Grolemund 2018; Xie, Dervieux, and Riederer 2020; Allaire et al. 2024), scico v. 1.5.0.9000 (Pedersen and Crameri 2025), sf v. 1.0.20 (E. Pebesma 2018; E. Pebesma and Bivand 2023), sp v. 2.2.0 (E. J. Pebesma and Bivand 2005; Bivand, Pebesma, and Gomez-Rubio 2013), splines v. 4.4.2 (R Core Team 2024b), tidyverse v. 2.0.0 (Wickham et al. 2019), trend v. 1.1.6 (Pohlert 2023).\n\n\n\n\n\n\n\n\nReferences\n\nA. C. Davison, and D. V. Hinkley. 1997. Bootstrap Methods and Their Applications. Cambridge: Cambridge University Press. doi:10.1017/CBO9780511802843.\n\n\nAden-Buie, Garrick, Carson Sievert, Richard Iannone, JJ Allaire, and Barbara Borges. 2023. flexdashboard: R Markdown Format for Flexible Dashboards. https://CRAN.R-project.org/package=flexdashboard.\n\n\nAllaire, JJ, Yihui Xie, Christophe Dervieux, Jonathan McPherson, Javier Luraschi, Kevin Ushey, Aron Atkins, et al. 2024. rmarkdown: Dynamic Documents for r. https://github.com/rstudio/rmarkdown.\n\n\nAngelo Canty, and B. D. Ripley. 2024. boot: Bootstrap r (s-Plus) Functions.\n\n\nAppelhans, Tim. 2024. leafgl: High-Performance “WebGl” Rendering for Package “leaflet”. https://CRAN.R-project.org/package=leafgl.\n\n\nAuguie, Baptiste. 2017. gridExtra: Miscellaneous Functions for “Grid” Graphics. https://CRAN.R-project.org/package=gridExtra.\n\n\nBarrett, Tyson, Matt Dowle, Arun Srinivasan, Jan Gorecki, Michael Chirico, Toby Hocking, Benjamin Schwendinger, and Ivan Krylov. 2025. data.table: Extension of “data.frame”. https://CRAN.R-project.org/package=data.table.\n\n\nBivand, Roger S., Edzer Pebesma, and Virgilio Gomez-Rubio. 2013. Applied Spatial Data Analysis with R, Second Edition. Springer, NY. https://asdar-book.org/.\n\n\nCameron, Allan, and Teun van den Brand. 2025. geomtextpath: Curved Text in “ggplot2”. https://CRAN.R-project.org/package=geomtextpath.\n\n\nCampitelli, Elio. 2021. metR: Tools for Easier Analysis of Meteorological Fields. https://doi.org/10.5281/zenodo.2593516.\n\n\n———. 2025. ggnewscale: Multiple Fill and Colour Scales in “ggplot2”. https://CRAN.R-project.org/package=ggnewscale.\n\n\nCheng, Joe, Barret Schloerke, Bhaskar Karambelkar, and Yihui Xie. 2024. leaflet: Create Interactive Web Maps with the JavaScript “Leaflet” Library. https://CRAN.R-project.org/package=leaflet.\n\n\nDouglas Nychka, Reinhard Furrer, John Paige, and Stephan Sain. 2021. “fields: Tools for Spatial Data.” Boulder, CO, USA: University Corporation for Atmospheric Research. https://github.com/dnychka/fieldsRPackage.\n\n\nEdwards, Stefan McKinnon. 2024. lemon: Freshing up Your “ggplot2” Plots. https://CRAN.R-project.org/package=lemon.\n\n\nGraves, Spencer, Hans-Peter Piepho, and Luciano Selzer with help from Sundar Dorai-Raj. 2024. multcompView: Visualizations of Paired Comparisons. https://CRAN.R-project.org/package=multcompView.\n\n\nHamilton, Nicholas E., and Michael Ferry. 2018. “ggtern: Ternary Diagrams Using ggplot2.” Journal of Statistical Software, Code Snippets 87 (3): 1–17. https://doi.org/10.18637/jss.v087.c03.\n\n\nHester, Jim, and Jennifer Bryan. 2024. glue: Interpreted String Literals. https://CRAN.R-project.org/package=glue.\n\n\nHijmans, Robert J. 2025. raster: Geographic Data Analysis and Modeling. https://CRAN.R-project.org/package=raster.\n\n\nHothorn, Torsten, Frank Bretz, and Peter Westfall. 2008. “Simultaneous Inference in General Parametric Models.” Biometrical Journal 50 (3): 346–63.\n\n\nLenth, Russell V. 2025. emmeans: Estimated Marginal Means, Aka Least-Squares Means. https://CRAN.R-project.org/package=emmeans.\n\n\nMcLeod, A. I. 2022. Kendall: Kendall Rank Correlation and Mann-Kendall Trend Test. https://CRAN.R-project.org/package=Kendall.\n\n\nMüller, Kirill. 2020. here: A Simpler Way to Find Your Files. https://CRAN.R-project.org/package=here.\n\n\nMurphy, Lora. 2023. likelihood: Methods for Maximum Likelihood Estimation. https://CRAN.R-project.org/package=likelihood.\n\n\nPebesma, Edzer. 2018. “Simple Features for R: Standardized Support for Spatial Vector Data.” The R Journal 10 (1): 439–46. https://doi.org/10.32614/RJ-2018-009.\n\n\nPebesma, Edzer J., and Roger Bivand. 2005. “Classes and Methods for Spatial Data in R.” R News 5 (2): 9–13. https://CRAN.R-project.org/doc/Rnews/.\n\n\nPebesma, Edzer, and Roger Bivand. 2023. Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016.\n\n\nPedersen, Thomas Lin. 2024. patchwork: The Composer of Plots. https://CRAN.R-project.org/package=patchwork.\n\n\nPedersen, Thomas Lin, and Fabio Crameri. 2025. scico: Colour Palettes Based on the Scientific Colour-Maps. https://github.com/thomasp85/scico.\n\n\nPérez-Luque, Antonio Jesús. 2025. likelihoodTools: Managing Results from Maximum Likelihood Estimation. https://doi.org/10.32614/cran.package.likelihoodtools.\n\n\nPohlert, Thorsten. 2023. trend: Non-Parametric Trend Tests and Change-Point Detection. https://CRAN.R-project.org/package=trend.\n\n\nR Core Team. 2024a. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\n———. 2024b. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\nSebastian, Gatscha. 2025. Leaflet.extras2: Extra Functionality for “leaflet” Package. https://CRAN.R-project.org/package=leaflet.extras2.\n\n\nvan den Brand, Teun. 2024. Ggh4x: Hacks for “ggplot2”. https://CRAN.R-project.org/package=ggh4x.\n\n\nVenables, W. N., and B. D. Ripley. 2002. Modern Applied Statistics with s. Fourth. New York: Springer. https://www.stats.ox.ac.uk/pub/MASS4/.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nXiao, Nan. 2024. ggsci: Scientific Journal and Sci-Fi Themed Color Palettes for “ggplot2”. https://CRAN.R-project.org/package=ggsci.\n\n\nXie, Yihui, J. J. Allaire, and Garrett Grolemund. 2018. R Markdown: The Definitive Guide. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown.\n\n\nXie, Yihui, Christophe Dervieux, and Emily Riederer. 2020. R Markdown Cookbook. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown-cookbook.\n\n\nYu, Guangchuang. 2023. ggimage: Use Image in “ggplot2”. https://CRAN.R-project.org/package=ggimage.\n\n\nZhu, Hao. 2024. kableExtra: Construct Complex Table with “kable” and Pipe Syntax. https://CRAN.R-project.org/package=kableExtra."
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "readme.html#code-for-optimal-carbon-partitioning-drives-sink-potential-dynamics-of-afforestation-under-climate-change",
    "href": "readme.html#code-for-optimal-carbon-partitioning-drives-sink-potential-dynamics-of-afforestation-under-climate-change",
    "title": "",
    "section": "Code for “Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change”",
    "text": "Code for “Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change”\n  \nThis repository contains all information and results for the paper Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change. The paper have been submitted to Global Change Biology"
  },
  {
    "objectID": "readme.html#website",
    "href": "readme.html#website",
    "title": "",
    "section": "Website",
    "text": "Website\nYou can see the website of the repo at: https://ajpelu.github.io/c_allocation_pine"
  },
  {
    "objectID": "readme.html#acknowledgements",
    "href": "readme.html#acknowledgements",
    "title": "",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis study is a contribution to projects:\n\nPID2019-110273RB-I00\nPID2022-142746NB-I00 funded by MCIN/AEI /10.13039/501100011033,\nTED2021-131947B-100 also funded by the EU NextGenerationEU/PRTR.\nLIFE-ADAPTAMED (LIFE14 CCA/ES/000612).\nAntonio J. Pérez-Luque received funding from the Spanish Ministry of Science and Innovation through the Juan de la Cierva postdoctoral fellowship program. Grant JDC2022-050056-I funded by MCIN/AEI/ 10.13039/501100011033 and by “European Union NextGenerationEU/PRTR"
  },
  {
    "objectID": "readme.html#how-to-cite",
    "href": "readme.html#how-to-cite",
    "title": "",
    "section": "How to cite:",
    "text": "How to cite:\n\nRepository:\nPérez-Luque AJ; Martín-Benit D; Zamora R & Gea-Izquierdo G. 2025. Code for Optimal carbon partitioning drives sink potential dynamics of afforestation under climate change. https://doi.org/10.5281/zenodo.7350714"
  }
]